// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve the ID of an Azure Dev Ops project
// based on its name.
//
// This data source requires connecting with a user token and doesn't work with a service token.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbtcloud.GetAzureDevOpsProject(ctx, &dbtcloud.GetAzureDevOpsProjectArgs{
//				Name: "my-project-name",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAzureDevOpsProject(ctx *pulumi.Context, args *GetAzureDevOpsProjectArgs, opts ...pulumi.InvokeOption) (*GetAzureDevOpsProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAzureDevOpsProjectResult
	err := ctx.Invoke("dbtcloud:index/getAzureDevOpsProject:getAzureDevOpsProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzureDevOpsProject.
type GetAzureDevOpsProjectArgs struct {
	// The name of the ADO project
	Name string `pulumi:"name"`
}

// A collection of values returned by getAzureDevOpsProject.
type GetAzureDevOpsProjectResult struct {
	// The internal Azure Dev Ops ID of the ADO Project
	Id string `pulumi:"id"`
	// The name of the ADO project
	Name string `pulumi:"name"`
	// The URL of the ADO project
	Url string `pulumi:"url"`
}

func GetAzureDevOpsProjectOutput(ctx *pulumi.Context, args GetAzureDevOpsProjectOutputArgs, opts ...pulumi.InvokeOption) GetAzureDevOpsProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAzureDevOpsProjectResult, error) {
			args := v.(GetAzureDevOpsProjectArgs)
			r, err := GetAzureDevOpsProject(ctx, &args, opts...)
			var s GetAzureDevOpsProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAzureDevOpsProjectResultOutput)
}

// A collection of arguments for invoking getAzureDevOpsProject.
type GetAzureDevOpsProjectOutputArgs struct {
	// The name of the ADO project
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAzureDevOpsProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureDevOpsProjectArgs)(nil)).Elem()
}

// A collection of values returned by getAzureDevOpsProject.
type GetAzureDevOpsProjectResultOutput struct{ *pulumi.OutputState }

func (GetAzureDevOpsProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureDevOpsProjectResult)(nil)).Elem()
}

func (o GetAzureDevOpsProjectResultOutput) ToGetAzureDevOpsProjectResultOutput() GetAzureDevOpsProjectResultOutput {
	return o
}

func (o GetAzureDevOpsProjectResultOutput) ToGetAzureDevOpsProjectResultOutputWithContext(ctx context.Context) GetAzureDevOpsProjectResultOutput {
	return o
}

// The internal Azure Dev Ops ID of the ADO Project
func (o GetAzureDevOpsProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the ADO project
func (o GetAzureDevOpsProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

// The URL of the ADO project
func (o GetAzureDevOpsProjectResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsProjectResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAzureDevOpsProjectResultOutput{})
}
