// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbtcloud.NewWebhook(ctx, "testWebhook", &dbtcloud.WebhookArgs{
//				ClientUrl:   pulumi.String("http://localhost/nothing"),
//				Description: pulumi.String("Test webhook"),
//				EventTypes: pulumi.StringArray{
//					pulumi.String("job.run.started"),
//					pulumi.String("job.run.completed"),
//				},
//				JobIds: pulumi.IntArray{
//					pulumi.Int(1234),
//					pulumi.Int(5678),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import using a job ID found in the URL or via the API.
//
// ```sh
//
//	$ pulumi import dbtcloud:index/webhook:Webhook test_webhook "job_id"
//
// ```
//
// ```sh
//
//	$ pulumi import dbtcloud:index/webhook:Webhook test_webhook wsu_abcdefg
//
// ```
type Webhook struct {
	pulumi.CustomResourceState

	// Webhooks Account Identifier
	AccountIdentifier pulumi.StringOutput `pulumi:"accountIdentifier"`
	// Webhooks active flag
	Active pulumi.BoolPtrOutput `pulumi:"active"`
	// Webhooks Client URL
	ClientUrl pulumi.StringOutput `pulumi:"clientUrl"`
	// Webhooks Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Webhooks Event Types
	EventTypes pulumi.StringArrayOutput `pulumi:"eventTypes"`
	// Secret key for the webhook. Can be used to validate the authenticity of the webhook.
	HmacSecret pulumi.StringOutput `pulumi:"hmacSecret"`
	// Latest HTTP status of the webhook
	HttpStatusCode pulumi.StringOutput `pulumi:"httpStatusCode"`
	// List of job IDs to trigger the webhook, An empty list will trigger on all jobs
	JobIds pulumi.IntArrayOutput `pulumi:"jobIds"`
	// Webhooks Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Webhooks ID
	WebhookId pulumi.StringOutput `pulumi:"webhookId"`
}

// NewWebhook registers a new resource with the given unique name, arguments, and options.
func NewWebhook(ctx *pulumi.Context,
	name string, args *WebhookArgs, opts ...pulumi.ResourceOption) (*Webhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientUrl == nil {
		return nil, errors.New("invalid value for required argument 'ClientUrl'")
	}
	if args.EventTypes == nil {
		return nil, errors.New("invalid value for required argument 'EventTypes'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"hmacSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Webhook
	err := ctx.RegisterResource("dbtcloud:index/webhook:Webhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhook gets an existing Webhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookState, opts ...pulumi.ResourceOption) (*Webhook, error) {
	var resource Webhook
	err := ctx.ReadResource("dbtcloud:index/webhook:Webhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webhook resources.
type webhookState struct {
	// Webhooks Account Identifier
	AccountIdentifier *string `pulumi:"accountIdentifier"`
	// Webhooks active flag
	Active *bool `pulumi:"active"`
	// Webhooks Client URL
	ClientUrl *string `pulumi:"clientUrl"`
	// Webhooks Description
	Description *string `pulumi:"description"`
	// Webhooks Event Types
	EventTypes []string `pulumi:"eventTypes"`
	// Secret key for the webhook. Can be used to validate the authenticity of the webhook.
	HmacSecret *string `pulumi:"hmacSecret"`
	// Latest HTTP status of the webhook
	HttpStatusCode *string `pulumi:"httpStatusCode"`
	// List of job IDs to trigger the webhook, An empty list will trigger on all jobs
	JobIds []int `pulumi:"jobIds"`
	// Webhooks Name
	Name *string `pulumi:"name"`
	// Webhooks ID
	WebhookId *string `pulumi:"webhookId"`
}

type WebhookState struct {
	// Webhooks Account Identifier
	AccountIdentifier pulumi.StringPtrInput
	// Webhooks active flag
	Active pulumi.BoolPtrInput
	// Webhooks Client URL
	ClientUrl pulumi.StringPtrInput
	// Webhooks Description
	Description pulumi.StringPtrInput
	// Webhooks Event Types
	EventTypes pulumi.StringArrayInput
	// Secret key for the webhook. Can be used to validate the authenticity of the webhook.
	HmacSecret pulumi.StringPtrInput
	// Latest HTTP status of the webhook
	HttpStatusCode pulumi.StringPtrInput
	// List of job IDs to trigger the webhook, An empty list will trigger on all jobs
	JobIds pulumi.IntArrayInput
	// Webhooks Name
	Name pulumi.StringPtrInput
	// Webhooks ID
	WebhookId pulumi.StringPtrInput
}

func (WebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookState)(nil)).Elem()
}

type webhookArgs struct {
	// Webhooks active flag
	Active *bool `pulumi:"active"`
	// Webhooks Client URL
	ClientUrl string `pulumi:"clientUrl"`
	// Webhooks Description
	Description *string `pulumi:"description"`
	// Webhooks Event Types
	EventTypes []string `pulumi:"eventTypes"`
	// List of job IDs to trigger the webhook, An empty list will trigger on all jobs
	JobIds []int `pulumi:"jobIds"`
	// Webhooks Name
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Webhook resource.
type WebhookArgs struct {
	// Webhooks active flag
	Active pulumi.BoolPtrInput
	// Webhooks Client URL
	ClientUrl pulumi.StringInput
	// Webhooks Description
	Description pulumi.StringPtrInput
	// Webhooks Event Types
	EventTypes pulumi.StringArrayInput
	// List of job IDs to trigger the webhook, An empty list will trigger on all jobs
	JobIds pulumi.IntArrayInput
	// Webhooks Name
	Name pulumi.StringPtrInput
}

func (WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookArgs)(nil)).Elem()
}

type WebhookInput interface {
	pulumi.Input

	ToWebhookOutput() WebhookOutput
	ToWebhookOutputWithContext(ctx context.Context) WebhookOutput
}

func (*Webhook) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (i *Webhook) ToWebhookOutput() WebhookOutput {
	return i.ToWebhookOutputWithContext(context.Background())
}

func (i *Webhook) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookOutput)
}

// WebhookArrayInput is an input type that accepts WebhookArray and WebhookArrayOutput values.
// You can construct a concrete instance of `WebhookArrayInput` via:
//
//	WebhookArray{ WebhookArgs{...} }
type WebhookArrayInput interface {
	pulumi.Input

	ToWebhookArrayOutput() WebhookArrayOutput
	ToWebhookArrayOutputWithContext(context.Context) WebhookArrayOutput
}

type WebhookArray []WebhookInput

func (WebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Webhook)(nil)).Elem()
}

func (i WebhookArray) ToWebhookArrayOutput() WebhookArrayOutput {
	return i.ToWebhookArrayOutputWithContext(context.Background())
}

func (i WebhookArray) ToWebhookArrayOutputWithContext(ctx context.Context) WebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookArrayOutput)
}

// WebhookMapInput is an input type that accepts WebhookMap and WebhookMapOutput values.
// You can construct a concrete instance of `WebhookMapInput` via:
//
//	WebhookMap{ "key": WebhookArgs{...} }
type WebhookMapInput interface {
	pulumi.Input

	ToWebhookMapOutput() WebhookMapOutput
	ToWebhookMapOutputWithContext(context.Context) WebhookMapOutput
}

type WebhookMap map[string]WebhookInput

func (WebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Webhook)(nil)).Elem()
}

func (i WebhookMap) ToWebhookMapOutput() WebhookMapOutput {
	return i.ToWebhookMapOutputWithContext(context.Background())
}

func (i WebhookMap) ToWebhookMapOutputWithContext(ctx context.Context) WebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookMapOutput)
}

type WebhookOutput struct{ *pulumi.OutputState }

func (WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (o WebhookOutput) ToWebhookOutput() WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return o
}

// Webhooks Account Identifier
func (o WebhookOutput) AccountIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.AccountIdentifier }).(pulumi.StringOutput)
}

// Webhooks active flag
func (o WebhookOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.BoolPtrOutput { return v.Active }).(pulumi.BoolPtrOutput)
}

// Webhooks Client URL
func (o WebhookOutput) ClientUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.ClientUrl }).(pulumi.StringOutput)
}

// Webhooks Description
func (o WebhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Webhooks Event Types
func (o WebhookOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringArrayOutput { return v.EventTypes }).(pulumi.StringArrayOutput)
}

// Secret key for the webhook. Can be used to validate the authenticity of the webhook.
func (o WebhookOutput) HmacSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.HmacSecret }).(pulumi.StringOutput)
}

// Latest HTTP status of the webhook
func (o WebhookOutput) HttpStatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.HttpStatusCode }).(pulumi.StringOutput)
}

// List of job IDs to trigger the webhook, An empty list will trigger on all jobs
func (o WebhookOutput) JobIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *Webhook) pulumi.IntArrayOutput { return v.JobIds }).(pulumi.IntArrayOutput)
}

// Webhooks Name
func (o WebhookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Webhooks ID
func (o WebhookOutput) WebhookId() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.WebhookId }).(pulumi.StringOutput)
}

type WebhookArrayOutput struct{ *pulumi.OutputState }

func (WebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Webhook)(nil)).Elem()
}

func (o WebhookArrayOutput) ToWebhookArrayOutput() WebhookArrayOutput {
	return o
}

func (o WebhookArrayOutput) ToWebhookArrayOutputWithContext(ctx context.Context) WebhookArrayOutput {
	return o
}

func (o WebhookArrayOutput) Index(i pulumi.IntInput) WebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Webhook {
		return vs[0].([]*Webhook)[vs[1].(int)]
	}).(WebhookOutput)
}

type WebhookMapOutput struct{ *pulumi.OutputState }

func (WebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Webhook)(nil)).Elem()
}

func (o WebhookMapOutput) ToWebhookMapOutput() WebhookMapOutput {
	return o
}

func (o WebhookMapOutput) ToWebhookMapOutputWithContext(ctx context.Context) WebhookMapOutput {
	return o
}

func (o WebhookMapOutput) MapIndex(k pulumi.StringInput) WebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Webhook {
		return vs[0].(map[string]*Webhook)[vs[1].(string)]
	}).(WebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookInput)(nil)).Elem(), &Webhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookArrayInput)(nil)).Elem(), WebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookMapInput)(nil)).Elem(), WebhookMap{})
	pulumi.RegisterOutputType(WebhookOutput{})
	pulumi.RegisterOutputType(WebhookArrayOutput{})
	pulumi.RegisterOutputType(WebhookMapOutput{})
}
