// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LegacyGetBigqueryCredential(ctx *pulumi.Context, args *LegacyGetBigqueryCredentialArgs, opts ...pulumi.InvokeOption) (*LegacyGetBigqueryCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LegacyGetBigqueryCredentialResult
	err := ctx.Invoke("dbtcloud:index/legacyGetBigqueryCredential:LegacyGetBigqueryCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking LegacyGetBigqueryCredential.
type LegacyGetBigqueryCredentialArgs struct {
	CredentialId int `pulumi:"credentialId"`
	ProjectId    int `pulumi:"projectId"`
}

// A collection of values returned by LegacyGetBigqueryCredential.
type LegacyGetBigqueryCredentialResult struct {
	CredentialId int    `pulumi:"credentialId"`
	Dataset      string `pulumi:"dataset"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	IsActive   bool   `pulumi:"isActive"`
	NumThreads int    `pulumi:"numThreads"`
	ProjectId  int    `pulumi:"projectId"`
}

func LegacyGetBigqueryCredentialOutput(ctx *pulumi.Context, args LegacyGetBigqueryCredentialOutputArgs, opts ...pulumi.InvokeOption) LegacyGetBigqueryCredentialResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LegacyGetBigqueryCredentialResult, error) {
			args := v.(LegacyGetBigqueryCredentialArgs)
			r, err := LegacyGetBigqueryCredential(ctx, &args, opts...)
			var s LegacyGetBigqueryCredentialResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LegacyGetBigqueryCredentialResultOutput)
}

// A collection of arguments for invoking LegacyGetBigqueryCredential.
type LegacyGetBigqueryCredentialOutputArgs struct {
	CredentialId pulumi.IntInput `pulumi:"credentialId"`
	ProjectId    pulumi.IntInput `pulumi:"projectId"`
}

func (LegacyGetBigqueryCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetBigqueryCredentialArgs)(nil)).Elem()
}

// A collection of values returned by LegacyGetBigqueryCredential.
type LegacyGetBigqueryCredentialResultOutput struct{ *pulumi.OutputState }

func (LegacyGetBigqueryCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetBigqueryCredentialResult)(nil)).Elem()
}

func (o LegacyGetBigqueryCredentialResultOutput) ToLegacyGetBigqueryCredentialResultOutput() LegacyGetBigqueryCredentialResultOutput {
	return o
}

func (o LegacyGetBigqueryCredentialResultOutput) ToLegacyGetBigqueryCredentialResultOutputWithContext(ctx context.Context) LegacyGetBigqueryCredentialResultOutput {
	return o
}

func (o LegacyGetBigqueryCredentialResultOutput) CredentialId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryCredentialResult) int { return v.CredentialId }).(pulumi.IntOutput)
}

func (o LegacyGetBigqueryCredentialResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryCredentialResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LegacyGetBigqueryCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryCredentialResultOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v LegacyGetBigqueryCredentialResult) bool { return v.IsActive }).(pulumi.BoolOutput)
}

func (o LegacyGetBigqueryCredentialResultOutput) NumThreads() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryCredentialResult) int { return v.NumThreads }).(pulumi.IntOutput)
}

func (o LegacyGetBigqueryCredentialResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryCredentialResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LegacyGetBigqueryCredentialResultOutput{})
}
