// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LegacyGetPostgresCredential(ctx *pulumi.Context, args *LegacyGetPostgresCredentialArgs, opts ...pulumi.InvokeOption) (*LegacyGetPostgresCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LegacyGetPostgresCredentialResult
	err := ctx.Invoke("dbtcloud:index/legacyGetPostgresCredential:LegacyGetPostgresCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking LegacyGetPostgresCredential.
type LegacyGetPostgresCredentialArgs struct {
	CredentialId int `pulumi:"credentialId"`
	ProjectId    int `pulumi:"projectId"`
}

// A collection of values returned by LegacyGetPostgresCredential.
type LegacyGetPostgresCredentialResult struct {
	CredentialId  int    `pulumi:"credentialId"`
	DefaultSchema string `pulumi:"defaultSchema"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	IsActive   bool   `pulumi:"isActive"`
	NumThreads int    `pulumi:"numThreads"`
	ProjectId  int    `pulumi:"projectId"`
	Username   string `pulumi:"username"`
}

func LegacyGetPostgresCredentialOutput(ctx *pulumi.Context, args LegacyGetPostgresCredentialOutputArgs, opts ...pulumi.InvokeOption) LegacyGetPostgresCredentialResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LegacyGetPostgresCredentialResult, error) {
			args := v.(LegacyGetPostgresCredentialArgs)
			r, err := LegacyGetPostgresCredential(ctx, &args, opts...)
			var s LegacyGetPostgresCredentialResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LegacyGetPostgresCredentialResultOutput)
}

// A collection of arguments for invoking LegacyGetPostgresCredential.
type LegacyGetPostgresCredentialOutputArgs struct {
	CredentialId pulumi.IntInput `pulumi:"credentialId"`
	ProjectId    pulumi.IntInput `pulumi:"projectId"`
}

func (LegacyGetPostgresCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetPostgresCredentialArgs)(nil)).Elem()
}

// A collection of values returned by LegacyGetPostgresCredential.
type LegacyGetPostgresCredentialResultOutput struct{ *pulumi.OutputState }

func (LegacyGetPostgresCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetPostgresCredentialResult)(nil)).Elem()
}

func (o LegacyGetPostgresCredentialResultOutput) ToLegacyGetPostgresCredentialResultOutput() LegacyGetPostgresCredentialResultOutput {
	return o
}

func (o LegacyGetPostgresCredentialResultOutput) ToLegacyGetPostgresCredentialResultOutputWithContext(ctx context.Context) LegacyGetPostgresCredentialResultOutput {
	return o
}

func (o LegacyGetPostgresCredentialResultOutput) CredentialId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetPostgresCredentialResult) int { return v.CredentialId }).(pulumi.IntOutput)
}

func (o LegacyGetPostgresCredentialResultOutput) DefaultSchema() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetPostgresCredentialResult) string { return v.DefaultSchema }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LegacyGetPostgresCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetPostgresCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LegacyGetPostgresCredentialResultOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v LegacyGetPostgresCredentialResult) bool { return v.IsActive }).(pulumi.BoolOutput)
}

func (o LegacyGetPostgresCredentialResultOutput) NumThreads() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetPostgresCredentialResult) int { return v.NumThreads }).(pulumi.IntOutput)
}

func (o LegacyGetPostgresCredentialResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetPostgresCredentialResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o LegacyGetPostgresCredentialResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetPostgresCredentialResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LegacyGetPostgresCredentialResultOutput{})
}
