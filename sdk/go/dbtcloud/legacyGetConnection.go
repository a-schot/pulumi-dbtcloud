// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LegacyGetConnection(ctx *pulumi.Context, args *LegacyGetConnectionArgs, opts ...pulumi.InvokeOption) (*LegacyGetConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LegacyGetConnectionResult
	err := ctx.Invoke("dbtcloud:index/legacyGetConnection:LegacyGetConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking LegacyGetConnection.
type LegacyGetConnectionArgs struct {
	ConnectionId int `pulumi:"connectionId"`
	ProjectId    int `pulumi:"projectId"`
}

// A collection of values returned by LegacyGetConnection.
type LegacyGetConnectionResult struct {
	Account        string `pulumi:"account"`
	AllowKeepAlive bool   `pulumi:"allowKeepAlive"`
	AllowSso       bool   `pulumi:"allowSso"`
	ConnectionId   int    `pulumi:"connectionId"`
	Database       string `pulumi:"database"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string `pulumi:"id"`
	IsActive              bool   `pulumi:"isActive"`
	Name                  string `pulumi:"name"`
	PrivateLinkEndpointId string `pulumi:"privateLinkEndpointId"`
	ProjectId             int    `pulumi:"projectId"`
	Role                  string `pulumi:"role"`
	Type                  string `pulumi:"type"`
	Warehouse             string `pulumi:"warehouse"`
}

func LegacyGetConnectionOutput(ctx *pulumi.Context, args LegacyGetConnectionOutputArgs, opts ...pulumi.InvokeOption) LegacyGetConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LegacyGetConnectionResult, error) {
			args := v.(LegacyGetConnectionArgs)
			r, err := LegacyGetConnection(ctx, &args, opts...)
			var s LegacyGetConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LegacyGetConnectionResultOutput)
}

// A collection of arguments for invoking LegacyGetConnection.
type LegacyGetConnectionOutputArgs struct {
	ConnectionId pulumi.IntInput `pulumi:"connectionId"`
	ProjectId    pulumi.IntInput `pulumi:"projectId"`
}

func (LegacyGetConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetConnectionArgs)(nil)).Elem()
}

// A collection of values returned by LegacyGetConnection.
type LegacyGetConnectionResultOutput struct{ *pulumi.OutputState }

func (LegacyGetConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetConnectionResult)(nil)).Elem()
}

func (o LegacyGetConnectionResultOutput) ToLegacyGetConnectionResultOutput() LegacyGetConnectionResultOutput {
	return o
}

func (o LegacyGetConnectionResultOutput) ToLegacyGetConnectionResultOutputWithContext(ctx context.Context) LegacyGetConnectionResultOutput {
	return o
}

func (o LegacyGetConnectionResultOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.Account }).(pulumi.StringOutput)
}

func (o LegacyGetConnectionResultOutput) AllowKeepAlive() pulumi.BoolOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) bool { return v.AllowKeepAlive }).(pulumi.BoolOutput)
}

func (o LegacyGetConnectionResultOutput) AllowSso() pulumi.BoolOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) bool { return v.AllowSso }).(pulumi.BoolOutput)
}

func (o LegacyGetConnectionResultOutput) ConnectionId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) int { return v.ConnectionId }).(pulumi.IntOutput)
}

func (o LegacyGetConnectionResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.Database }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LegacyGetConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LegacyGetConnectionResultOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) bool { return v.IsActive }).(pulumi.BoolOutput)
}

func (o LegacyGetConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LegacyGetConnectionResultOutput) PrivateLinkEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.PrivateLinkEndpointId }).(pulumi.StringOutput)
}

func (o LegacyGetConnectionResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o LegacyGetConnectionResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.Role }).(pulumi.StringOutput)
}

func (o LegacyGetConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LegacyGetConnectionResultOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetConnectionResult) string { return v.Warehouse }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LegacyGetConnectionResultOutput{})
}
