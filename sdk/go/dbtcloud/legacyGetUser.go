// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LegacyGetUser(ctx *pulumi.Context, args *LegacyGetUserArgs, opts ...pulumi.InvokeOption) (*LegacyGetUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LegacyGetUserResult
	err := ctx.Invoke("dbtcloud:index/legacyGetUser:LegacyGetUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking LegacyGetUser.
type LegacyGetUserArgs struct {
	Email string `pulumi:"email"`
}

// A collection of values returned by LegacyGetUser.
type LegacyGetUserResult struct {
	Email string `pulumi:"email"`
	Id    int    `pulumi:"id"`
}

func LegacyGetUserOutput(ctx *pulumi.Context, args LegacyGetUserOutputArgs, opts ...pulumi.InvokeOption) LegacyGetUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LegacyGetUserResult, error) {
			args := v.(LegacyGetUserArgs)
			r, err := LegacyGetUser(ctx, &args, opts...)
			var s LegacyGetUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LegacyGetUserResultOutput)
}

// A collection of arguments for invoking LegacyGetUser.
type LegacyGetUserOutputArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
}

func (LegacyGetUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetUserArgs)(nil)).Elem()
}

// A collection of values returned by LegacyGetUser.
type LegacyGetUserResultOutput struct{ *pulumi.OutputState }

func (LegacyGetUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetUserResult)(nil)).Elem()
}

func (o LegacyGetUserResultOutput) ToLegacyGetUserResultOutput() LegacyGetUserResultOutput {
	return o
}

func (o LegacyGetUserResultOutput) ToLegacyGetUserResultOutputWithContext(ctx context.Context) LegacyGetUserResultOutput {
	return o
}

func (o LegacyGetUserResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetUserResult) string { return v.Email }).(pulumi.StringOutput)
}

func (o LegacyGetUserResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetUserResult) int { return v.Id }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LegacyGetUserResultOutput{})
}
