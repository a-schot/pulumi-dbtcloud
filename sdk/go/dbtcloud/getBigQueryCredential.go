// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetBigQueryCredential(ctx *pulumi.Context, args *GetBigQueryCredentialArgs, opts ...pulumi.InvokeOption) (*GetBigQueryCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBigQueryCredentialResult
	err := ctx.Invoke("dbtcloud:index/getBigQueryCredential:getBigQueryCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBigQueryCredential.
type GetBigQueryCredentialArgs struct {
	// Credential ID
	CredentialId int `pulumi:"credentialId"`
	// Project ID
	ProjectId int `pulumi:"projectId"`
}

// A collection of values returned by getBigQueryCredential.
type GetBigQueryCredentialResult struct {
	// Credential ID
	CredentialId int `pulumi:"credentialId"`
	// Default dataset name
	Dataset string `pulumi:"dataset"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether the BigQuery credential is active
	IsActive bool `pulumi:"isActive"`
	// Number of threads to use
	NumThreads int `pulumi:"numThreads"`
	// Project ID
	ProjectId int `pulumi:"projectId"`
}

func GetBigQueryCredentialOutput(ctx *pulumi.Context, args GetBigQueryCredentialOutputArgs, opts ...pulumi.InvokeOption) GetBigQueryCredentialResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBigQueryCredentialResult, error) {
			args := v.(GetBigQueryCredentialArgs)
			r, err := GetBigQueryCredential(ctx, &args, opts...)
			var s GetBigQueryCredentialResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBigQueryCredentialResultOutput)
}

// A collection of arguments for invoking getBigQueryCredential.
type GetBigQueryCredentialOutputArgs struct {
	// Credential ID
	CredentialId pulumi.IntInput `pulumi:"credentialId"`
	// Project ID
	ProjectId pulumi.IntInput `pulumi:"projectId"`
}

func (GetBigQueryCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBigQueryCredentialArgs)(nil)).Elem()
}

// A collection of values returned by getBigQueryCredential.
type GetBigQueryCredentialResultOutput struct{ *pulumi.OutputState }

func (GetBigQueryCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBigQueryCredentialResult)(nil)).Elem()
}

func (o GetBigQueryCredentialResultOutput) ToGetBigQueryCredentialResultOutput() GetBigQueryCredentialResultOutput {
	return o
}

func (o GetBigQueryCredentialResultOutput) ToGetBigQueryCredentialResultOutputWithContext(ctx context.Context) GetBigQueryCredentialResultOutput {
	return o
}

// Credential ID
func (o GetBigQueryCredentialResultOutput) CredentialId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBigQueryCredentialResult) int { return v.CredentialId }).(pulumi.IntOutput)
}

// Default dataset name
func (o GetBigQueryCredentialResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigQueryCredentialResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBigQueryCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigQueryCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the BigQuery credential is active
func (o GetBigQueryCredentialResultOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBigQueryCredentialResult) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// Number of threads to use
func (o GetBigQueryCredentialResultOutput) NumThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetBigQueryCredentialResult) int { return v.NumThreads }).(pulumi.IntOutput)
}

// Project ID
func (o GetBigQueryCredentialResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBigQueryCredentialResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBigQueryCredentialResultOutput{})
}
