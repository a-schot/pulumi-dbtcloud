// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbtcloud.NewEnvironmentVariableJobOverride(ctx, "myEnvVarJobOverride", &dbtcloud.EnvironmentVariableJobOverrideArgs{
//				ProjectId:       pulumi.Any(dbtcloud_project.Dbt_project.Id),
//				JobDefinitionId: pulumi.Any(dbtcloud_job.Daily_job.Id),
//				RawValue:        pulumi.String("my_override_value"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import using a project ID, a job ID and the environment variable override ID
//
// ```sh
// $ pulumi import dbtcloud:index/environmentVariableJobOverride:EnvironmentVariableJobOverride test_environment_variable_job_override "project_id:job_id:environment_variable_override_id"
// ```
//
// ```sh
// $ pulumi import dbtcloud:index/environmentVariableJobOverride:EnvironmentVariableJobOverride test_environment_variable_job_override 12345:678:123456
// ```
type EnvironmentVariableJobOverride struct {
	pulumi.CustomResourceState

	// The ID of the environment variable job override
	EnvironmentVariableJobOverrideId pulumi.IntOutput `pulumi:"environmentVariableJobOverrideId"`
	// The job ID for which the environment variable is being overridden
	JobDefinitionId pulumi.IntOutput `pulumi:"jobDefinitionId"`
	// The environment variable name to override
	Name pulumi.StringOutput `pulumi:"name"`
	// The project ID for which the environment variable is being overridden
	ProjectId pulumi.IntOutput `pulumi:"projectId"`
	// The value for the override of the environment variable
	RawValue pulumi.StringOutput `pulumi:"rawValue"`
}

// NewEnvironmentVariableJobOverride registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentVariableJobOverride(ctx *pulumi.Context,
	name string, args *EnvironmentVariableJobOverrideArgs, opts ...pulumi.ResourceOption) (*EnvironmentVariableJobOverride, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobDefinitionId == nil {
		return nil, errors.New("invalid value for required argument 'JobDefinitionId'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.RawValue == nil {
		return nil, errors.New("invalid value for required argument 'RawValue'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentVariableJobOverride
	err := ctx.RegisterResource("dbtcloud:index/environmentVariableJobOverride:EnvironmentVariableJobOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentVariableJobOverride gets an existing EnvironmentVariableJobOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentVariableJobOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentVariableJobOverrideState, opts ...pulumi.ResourceOption) (*EnvironmentVariableJobOverride, error) {
	var resource EnvironmentVariableJobOverride
	err := ctx.ReadResource("dbtcloud:index/environmentVariableJobOverride:EnvironmentVariableJobOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentVariableJobOverride resources.
type environmentVariableJobOverrideState struct {
	// The ID of the environment variable job override
	EnvironmentVariableJobOverrideId *int `pulumi:"environmentVariableJobOverrideId"`
	// The job ID for which the environment variable is being overridden
	JobDefinitionId *int `pulumi:"jobDefinitionId"`
	// The environment variable name to override
	Name *string `pulumi:"name"`
	// The project ID for which the environment variable is being overridden
	ProjectId *int `pulumi:"projectId"`
	// The value for the override of the environment variable
	RawValue *string `pulumi:"rawValue"`
}

type EnvironmentVariableJobOverrideState struct {
	// The ID of the environment variable job override
	EnvironmentVariableJobOverrideId pulumi.IntPtrInput
	// The job ID for which the environment variable is being overridden
	JobDefinitionId pulumi.IntPtrInput
	// The environment variable name to override
	Name pulumi.StringPtrInput
	// The project ID for which the environment variable is being overridden
	ProjectId pulumi.IntPtrInput
	// The value for the override of the environment variable
	RawValue pulumi.StringPtrInput
}

func (EnvironmentVariableJobOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentVariableJobOverrideState)(nil)).Elem()
}

type environmentVariableJobOverrideArgs struct {
	// The job ID for which the environment variable is being overridden
	JobDefinitionId int `pulumi:"jobDefinitionId"`
	// The environment variable name to override
	Name *string `pulumi:"name"`
	// The project ID for which the environment variable is being overridden
	ProjectId int `pulumi:"projectId"`
	// The value for the override of the environment variable
	RawValue string `pulumi:"rawValue"`
}

// The set of arguments for constructing a EnvironmentVariableJobOverride resource.
type EnvironmentVariableJobOverrideArgs struct {
	// The job ID for which the environment variable is being overridden
	JobDefinitionId pulumi.IntInput
	// The environment variable name to override
	Name pulumi.StringPtrInput
	// The project ID for which the environment variable is being overridden
	ProjectId pulumi.IntInput
	// The value for the override of the environment variable
	RawValue pulumi.StringInput
}

func (EnvironmentVariableJobOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentVariableJobOverrideArgs)(nil)).Elem()
}

type EnvironmentVariableJobOverrideInput interface {
	pulumi.Input

	ToEnvironmentVariableJobOverrideOutput() EnvironmentVariableJobOverrideOutput
	ToEnvironmentVariableJobOverrideOutputWithContext(ctx context.Context) EnvironmentVariableJobOverrideOutput
}

func (*EnvironmentVariableJobOverride) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentVariableJobOverride)(nil)).Elem()
}

func (i *EnvironmentVariableJobOverride) ToEnvironmentVariableJobOverrideOutput() EnvironmentVariableJobOverrideOutput {
	return i.ToEnvironmentVariableJobOverrideOutputWithContext(context.Background())
}

func (i *EnvironmentVariableJobOverride) ToEnvironmentVariableJobOverrideOutputWithContext(ctx context.Context) EnvironmentVariableJobOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVariableJobOverrideOutput)
}

// EnvironmentVariableJobOverrideArrayInput is an input type that accepts EnvironmentVariableJobOverrideArray and EnvironmentVariableJobOverrideArrayOutput values.
// You can construct a concrete instance of `EnvironmentVariableJobOverrideArrayInput` via:
//
//	EnvironmentVariableJobOverrideArray{ EnvironmentVariableJobOverrideArgs{...} }
type EnvironmentVariableJobOverrideArrayInput interface {
	pulumi.Input

	ToEnvironmentVariableJobOverrideArrayOutput() EnvironmentVariableJobOverrideArrayOutput
	ToEnvironmentVariableJobOverrideArrayOutputWithContext(context.Context) EnvironmentVariableJobOverrideArrayOutput
}

type EnvironmentVariableJobOverrideArray []EnvironmentVariableJobOverrideInput

func (EnvironmentVariableJobOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentVariableJobOverride)(nil)).Elem()
}

func (i EnvironmentVariableJobOverrideArray) ToEnvironmentVariableJobOverrideArrayOutput() EnvironmentVariableJobOverrideArrayOutput {
	return i.ToEnvironmentVariableJobOverrideArrayOutputWithContext(context.Background())
}

func (i EnvironmentVariableJobOverrideArray) ToEnvironmentVariableJobOverrideArrayOutputWithContext(ctx context.Context) EnvironmentVariableJobOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVariableJobOverrideArrayOutput)
}

// EnvironmentVariableJobOverrideMapInput is an input type that accepts EnvironmentVariableJobOverrideMap and EnvironmentVariableJobOverrideMapOutput values.
// You can construct a concrete instance of `EnvironmentVariableJobOverrideMapInput` via:
//
//	EnvironmentVariableJobOverrideMap{ "key": EnvironmentVariableJobOverrideArgs{...} }
type EnvironmentVariableJobOverrideMapInput interface {
	pulumi.Input

	ToEnvironmentVariableJobOverrideMapOutput() EnvironmentVariableJobOverrideMapOutput
	ToEnvironmentVariableJobOverrideMapOutputWithContext(context.Context) EnvironmentVariableJobOverrideMapOutput
}

type EnvironmentVariableJobOverrideMap map[string]EnvironmentVariableJobOverrideInput

func (EnvironmentVariableJobOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentVariableJobOverride)(nil)).Elem()
}

func (i EnvironmentVariableJobOverrideMap) ToEnvironmentVariableJobOverrideMapOutput() EnvironmentVariableJobOverrideMapOutput {
	return i.ToEnvironmentVariableJobOverrideMapOutputWithContext(context.Background())
}

func (i EnvironmentVariableJobOverrideMap) ToEnvironmentVariableJobOverrideMapOutputWithContext(ctx context.Context) EnvironmentVariableJobOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVariableJobOverrideMapOutput)
}

type EnvironmentVariableJobOverrideOutput struct{ *pulumi.OutputState }

func (EnvironmentVariableJobOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentVariableJobOverride)(nil)).Elem()
}

func (o EnvironmentVariableJobOverrideOutput) ToEnvironmentVariableJobOverrideOutput() EnvironmentVariableJobOverrideOutput {
	return o
}

func (o EnvironmentVariableJobOverrideOutput) ToEnvironmentVariableJobOverrideOutputWithContext(ctx context.Context) EnvironmentVariableJobOverrideOutput {
	return o
}

// The ID of the environment variable job override
func (o EnvironmentVariableJobOverrideOutput) EnvironmentVariableJobOverrideId() pulumi.IntOutput {
	return o.ApplyT(func(v *EnvironmentVariableJobOverride) pulumi.IntOutput { return v.EnvironmentVariableJobOverrideId }).(pulumi.IntOutput)
}

// The job ID for which the environment variable is being overridden
func (o EnvironmentVariableJobOverrideOutput) JobDefinitionId() pulumi.IntOutput {
	return o.ApplyT(func(v *EnvironmentVariableJobOverride) pulumi.IntOutput { return v.JobDefinitionId }).(pulumi.IntOutput)
}

// The environment variable name to override
func (o EnvironmentVariableJobOverrideOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentVariableJobOverride) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project ID for which the environment variable is being overridden
func (o EnvironmentVariableJobOverrideOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v *EnvironmentVariableJobOverride) pulumi.IntOutput { return v.ProjectId }).(pulumi.IntOutput)
}

// The value for the override of the environment variable
func (o EnvironmentVariableJobOverrideOutput) RawValue() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentVariableJobOverride) pulumi.StringOutput { return v.RawValue }).(pulumi.StringOutput)
}

type EnvironmentVariableJobOverrideArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentVariableJobOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentVariableJobOverride)(nil)).Elem()
}

func (o EnvironmentVariableJobOverrideArrayOutput) ToEnvironmentVariableJobOverrideArrayOutput() EnvironmentVariableJobOverrideArrayOutput {
	return o
}

func (o EnvironmentVariableJobOverrideArrayOutput) ToEnvironmentVariableJobOverrideArrayOutputWithContext(ctx context.Context) EnvironmentVariableJobOverrideArrayOutput {
	return o
}

func (o EnvironmentVariableJobOverrideArrayOutput) Index(i pulumi.IntInput) EnvironmentVariableJobOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvironmentVariableJobOverride {
		return vs[0].([]*EnvironmentVariableJobOverride)[vs[1].(int)]
	}).(EnvironmentVariableJobOverrideOutput)
}

type EnvironmentVariableJobOverrideMapOutput struct{ *pulumi.OutputState }

func (EnvironmentVariableJobOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentVariableJobOverride)(nil)).Elem()
}

func (o EnvironmentVariableJobOverrideMapOutput) ToEnvironmentVariableJobOverrideMapOutput() EnvironmentVariableJobOverrideMapOutput {
	return o
}

func (o EnvironmentVariableJobOverrideMapOutput) ToEnvironmentVariableJobOverrideMapOutputWithContext(ctx context.Context) EnvironmentVariableJobOverrideMapOutput {
	return o
}

func (o EnvironmentVariableJobOverrideMapOutput) MapIndex(k pulumi.StringInput) EnvironmentVariableJobOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvironmentVariableJobOverride {
		return vs[0].(map[string]*EnvironmentVariableJobOverride)[vs[1].(string)]
	}).(EnvironmentVariableJobOverrideOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentVariableJobOverrideInput)(nil)).Elem(), &EnvironmentVariableJobOverride{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentVariableJobOverrideArrayInput)(nil)).Elem(), EnvironmentVariableJobOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentVariableJobOverrideMapInput)(nil)).Elem(), EnvironmentVariableJobOverrideMap{})
	pulumi.RegisterOutputType(EnvironmentVariableJobOverrideOutput{})
	pulumi.RegisterOutputType(EnvironmentVariableJobOverrideArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentVariableJobOverrideMapOutput{})
}
