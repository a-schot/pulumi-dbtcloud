// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GroupGroupPermission struct {
	// Whether or not to apply this permission to all projects for this group
	AllProjects bool `pulumi:"allProjects"`
	// Set of permissions to apply
	PermissionSet string `pulumi:"permissionSet"`
	// Project ID to apply this permission to for this group
	ProjectId *int `pulumi:"projectId"`
}

// GroupGroupPermissionInput is an input type that accepts GroupGroupPermissionArgs and GroupGroupPermissionOutput values.
// You can construct a concrete instance of `GroupGroupPermissionInput` via:
//
//	GroupGroupPermissionArgs{...}
type GroupGroupPermissionInput interface {
	pulumi.Input

	ToGroupGroupPermissionOutput() GroupGroupPermissionOutput
	ToGroupGroupPermissionOutputWithContext(context.Context) GroupGroupPermissionOutput
}

type GroupGroupPermissionArgs struct {
	// Whether or not to apply this permission to all projects for this group
	AllProjects pulumi.BoolInput `pulumi:"allProjects"`
	// Set of permissions to apply
	PermissionSet pulumi.StringInput `pulumi:"permissionSet"`
	// Project ID to apply this permission to for this group
	ProjectId pulumi.IntPtrInput `pulumi:"projectId"`
}

func (GroupGroupPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupGroupPermission)(nil)).Elem()
}

func (i GroupGroupPermissionArgs) ToGroupGroupPermissionOutput() GroupGroupPermissionOutput {
	return i.ToGroupGroupPermissionOutputWithContext(context.Background())
}

func (i GroupGroupPermissionArgs) ToGroupGroupPermissionOutputWithContext(ctx context.Context) GroupGroupPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupGroupPermissionOutput)
}

// GroupGroupPermissionArrayInput is an input type that accepts GroupGroupPermissionArray and GroupGroupPermissionArrayOutput values.
// You can construct a concrete instance of `GroupGroupPermissionArrayInput` via:
//
//	GroupGroupPermissionArray{ GroupGroupPermissionArgs{...} }
type GroupGroupPermissionArrayInput interface {
	pulumi.Input

	ToGroupGroupPermissionArrayOutput() GroupGroupPermissionArrayOutput
	ToGroupGroupPermissionArrayOutputWithContext(context.Context) GroupGroupPermissionArrayOutput
}

type GroupGroupPermissionArray []GroupGroupPermissionInput

func (GroupGroupPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupGroupPermission)(nil)).Elem()
}

func (i GroupGroupPermissionArray) ToGroupGroupPermissionArrayOutput() GroupGroupPermissionArrayOutput {
	return i.ToGroupGroupPermissionArrayOutputWithContext(context.Background())
}

func (i GroupGroupPermissionArray) ToGroupGroupPermissionArrayOutputWithContext(ctx context.Context) GroupGroupPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupGroupPermissionArrayOutput)
}

type GroupGroupPermissionOutput struct{ *pulumi.OutputState }

func (GroupGroupPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupGroupPermission)(nil)).Elem()
}

func (o GroupGroupPermissionOutput) ToGroupGroupPermissionOutput() GroupGroupPermissionOutput {
	return o
}

func (o GroupGroupPermissionOutput) ToGroupGroupPermissionOutputWithContext(ctx context.Context) GroupGroupPermissionOutput {
	return o
}

// Whether or not to apply this permission to all projects for this group
func (o GroupGroupPermissionOutput) AllProjects() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupGroupPermission) bool { return v.AllProjects }).(pulumi.BoolOutput)
}

// Set of permissions to apply
func (o GroupGroupPermissionOutput) PermissionSet() pulumi.StringOutput {
	return o.ApplyT(func(v GroupGroupPermission) string { return v.PermissionSet }).(pulumi.StringOutput)
}

// Project ID to apply this permission to for this group
func (o GroupGroupPermissionOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupGroupPermission) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

type GroupGroupPermissionArrayOutput struct{ *pulumi.OutputState }

func (GroupGroupPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupGroupPermission)(nil)).Elem()
}

func (o GroupGroupPermissionArrayOutput) ToGroupGroupPermissionArrayOutput() GroupGroupPermissionArrayOutput {
	return o
}

func (o GroupGroupPermissionArrayOutput) ToGroupGroupPermissionArrayOutputWithContext(ctx context.Context) GroupGroupPermissionArrayOutput {
	return o
}

func (o GroupGroupPermissionArrayOutput) Index(i pulumi.IntInput) GroupGroupPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupGroupPermission {
		return vs[0].([]GroupGroupPermission)[vs[1].(int)]
	}).(GroupGroupPermissionOutput)
}

type JobJobCompletionTriggerCondition struct {
	// The ID of the job that would trigger this job after completion.
	JobId int `pulumi:"jobId"`
	// The ID of the project where the trigger job is running in.
	ProjectId int `pulumi:"projectId"`
	// List of statuses to trigger the job on. Possible values are `success`, `error` and `canceled`.
	Statuses []string `pulumi:"statuses"`
}

// JobJobCompletionTriggerConditionInput is an input type that accepts JobJobCompletionTriggerConditionArgs and JobJobCompletionTriggerConditionOutput values.
// You can construct a concrete instance of `JobJobCompletionTriggerConditionInput` via:
//
//	JobJobCompletionTriggerConditionArgs{...}
type JobJobCompletionTriggerConditionInput interface {
	pulumi.Input

	ToJobJobCompletionTriggerConditionOutput() JobJobCompletionTriggerConditionOutput
	ToJobJobCompletionTriggerConditionOutputWithContext(context.Context) JobJobCompletionTriggerConditionOutput
}

type JobJobCompletionTriggerConditionArgs struct {
	// The ID of the job that would trigger this job after completion.
	JobId pulumi.IntInput `pulumi:"jobId"`
	// The ID of the project where the trigger job is running in.
	ProjectId pulumi.IntInput `pulumi:"projectId"`
	// List of statuses to trigger the job on. Possible values are `success`, `error` and `canceled`.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
}

func (JobJobCompletionTriggerConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJobCompletionTriggerCondition)(nil)).Elem()
}

func (i JobJobCompletionTriggerConditionArgs) ToJobJobCompletionTriggerConditionOutput() JobJobCompletionTriggerConditionOutput {
	return i.ToJobJobCompletionTriggerConditionOutputWithContext(context.Background())
}

func (i JobJobCompletionTriggerConditionArgs) ToJobJobCompletionTriggerConditionOutputWithContext(ctx context.Context) JobJobCompletionTriggerConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobCompletionTriggerConditionOutput)
}

func (i JobJobCompletionTriggerConditionArgs) ToJobJobCompletionTriggerConditionPtrOutput() JobJobCompletionTriggerConditionPtrOutput {
	return i.ToJobJobCompletionTriggerConditionPtrOutputWithContext(context.Background())
}

func (i JobJobCompletionTriggerConditionArgs) ToJobJobCompletionTriggerConditionPtrOutputWithContext(ctx context.Context) JobJobCompletionTriggerConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobCompletionTriggerConditionOutput).ToJobJobCompletionTriggerConditionPtrOutputWithContext(ctx)
}

// JobJobCompletionTriggerConditionPtrInput is an input type that accepts JobJobCompletionTriggerConditionArgs, JobJobCompletionTriggerConditionPtr and JobJobCompletionTriggerConditionPtrOutput values.
// You can construct a concrete instance of `JobJobCompletionTriggerConditionPtrInput` via:
//
//	        JobJobCompletionTriggerConditionArgs{...}
//
//	or:
//
//	        nil
type JobJobCompletionTriggerConditionPtrInput interface {
	pulumi.Input

	ToJobJobCompletionTriggerConditionPtrOutput() JobJobCompletionTriggerConditionPtrOutput
	ToJobJobCompletionTriggerConditionPtrOutputWithContext(context.Context) JobJobCompletionTriggerConditionPtrOutput
}

type jobJobCompletionTriggerConditionPtrType JobJobCompletionTriggerConditionArgs

func JobJobCompletionTriggerConditionPtr(v *JobJobCompletionTriggerConditionArgs) JobJobCompletionTriggerConditionPtrInput {
	return (*jobJobCompletionTriggerConditionPtrType)(v)
}

func (*jobJobCompletionTriggerConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobJobCompletionTriggerCondition)(nil)).Elem()
}

func (i *jobJobCompletionTriggerConditionPtrType) ToJobJobCompletionTriggerConditionPtrOutput() JobJobCompletionTriggerConditionPtrOutput {
	return i.ToJobJobCompletionTriggerConditionPtrOutputWithContext(context.Background())
}

func (i *jobJobCompletionTriggerConditionPtrType) ToJobJobCompletionTriggerConditionPtrOutputWithContext(ctx context.Context) JobJobCompletionTriggerConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobJobCompletionTriggerConditionPtrOutput)
}

type JobJobCompletionTriggerConditionOutput struct{ *pulumi.OutputState }

func (JobJobCompletionTriggerConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobJobCompletionTriggerCondition)(nil)).Elem()
}

func (o JobJobCompletionTriggerConditionOutput) ToJobJobCompletionTriggerConditionOutput() JobJobCompletionTriggerConditionOutput {
	return o
}

func (o JobJobCompletionTriggerConditionOutput) ToJobJobCompletionTriggerConditionOutputWithContext(ctx context.Context) JobJobCompletionTriggerConditionOutput {
	return o
}

func (o JobJobCompletionTriggerConditionOutput) ToJobJobCompletionTriggerConditionPtrOutput() JobJobCompletionTriggerConditionPtrOutput {
	return o.ToJobJobCompletionTriggerConditionPtrOutputWithContext(context.Background())
}

func (o JobJobCompletionTriggerConditionOutput) ToJobJobCompletionTriggerConditionPtrOutputWithContext(ctx context.Context) JobJobCompletionTriggerConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobJobCompletionTriggerCondition) *JobJobCompletionTriggerCondition {
		return &v
	}).(JobJobCompletionTriggerConditionPtrOutput)
}

// The ID of the job that would trigger this job after completion.
func (o JobJobCompletionTriggerConditionOutput) JobId() pulumi.IntOutput {
	return o.ApplyT(func(v JobJobCompletionTriggerCondition) int { return v.JobId }).(pulumi.IntOutput)
}

// The ID of the project where the trigger job is running in.
func (o JobJobCompletionTriggerConditionOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v JobJobCompletionTriggerCondition) int { return v.ProjectId }).(pulumi.IntOutput)
}

// List of statuses to trigger the job on. Possible values are `success`, `error` and `canceled`.
func (o JobJobCompletionTriggerConditionOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobJobCompletionTriggerCondition) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

type JobJobCompletionTriggerConditionPtrOutput struct{ *pulumi.OutputState }

func (JobJobCompletionTriggerConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobJobCompletionTriggerCondition)(nil)).Elem()
}

func (o JobJobCompletionTriggerConditionPtrOutput) ToJobJobCompletionTriggerConditionPtrOutput() JobJobCompletionTriggerConditionPtrOutput {
	return o
}

func (o JobJobCompletionTriggerConditionPtrOutput) ToJobJobCompletionTriggerConditionPtrOutputWithContext(ctx context.Context) JobJobCompletionTriggerConditionPtrOutput {
	return o
}

func (o JobJobCompletionTriggerConditionPtrOutput) Elem() JobJobCompletionTriggerConditionOutput {
	return o.ApplyT(func(v *JobJobCompletionTriggerCondition) JobJobCompletionTriggerCondition {
		if v != nil {
			return *v
		}
		var ret JobJobCompletionTriggerCondition
		return ret
	}).(JobJobCompletionTriggerConditionOutput)
}

// The ID of the job that would trigger this job after completion.
func (o JobJobCompletionTriggerConditionPtrOutput) JobId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobJobCompletionTriggerCondition) *int {
		if v == nil {
			return nil
		}
		return &v.JobId
	}).(pulumi.IntPtrOutput)
}

// The ID of the project where the trigger job is running in.
func (o JobJobCompletionTriggerConditionPtrOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobJobCompletionTriggerCondition) *int {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.IntPtrOutput)
}

// List of statuses to trigger the job on. Possible values are `success`, `error` and `canceled`.
func (o JobJobCompletionTriggerConditionPtrOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobJobCompletionTriggerCondition) []string {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(pulumi.StringArrayOutput)
}

type ServiceTokenServiceTokenPermission struct {
	// Whether or not to apply this permission to all projects for this service token
	AllProjects bool `pulumi:"allProjects"`
	// Set of permissions to apply
	PermissionSet string `pulumi:"permissionSet"`
	// Project ID to apply this permission to for this service token
	ProjectId *int `pulumi:"projectId"`
}

// ServiceTokenServiceTokenPermissionInput is an input type that accepts ServiceTokenServiceTokenPermissionArgs and ServiceTokenServiceTokenPermissionOutput values.
// You can construct a concrete instance of `ServiceTokenServiceTokenPermissionInput` via:
//
//	ServiceTokenServiceTokenPermissionArgs{...}
type ServiceTokenServiceTokenPermissionInput interface {
	pulumi.Input

	ToServiceTokenServiceTokenPermissionOutput() ServiceTokenServiceTokenPermissionOutput
	ToServiceTokenServiceTokenPermissionOutputWithContext(context.Context) ServiceTokenServiceTokenPermissionOutput
}

type ServiceTokenServiceTokenPermissionArgs struct {
	// Whether or not to apply this permission to all projects for this service token
	AllProjects pulumi.BoolInput `pulumi:"allProjects"`
	// Set of permissions to apply
	PermissionSet pulumi.StringInput `pulumi:"permissionSet"`
	// Project ID to apply this permission to for this service token
	ProjectId pulumi.IntPtrInput `pulumi:"projectId"`
}

func (ServiceTokenServiceTokenPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (i ServiceTokenServiceTokenPermissionArgs) ToServiceTokenServiceTokenPermissionOutput() ServiceTokenServiceTokenPermissionOutput {
	return i.ToServiceTokenServiceTokenPermissionOutputWithContext(context.Background())
}

func (i ServiceTokenServiceTokenPermissionArgs) ToServiceTokenServiceTokenPermissionOutputWithContext(ctx context.Context) ServiceTokenServiceTokenPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTokenServiceTokenPermissionOutput)
}

// ServiceTokenServiceTokenPermissionArrayInput is an input type that accepts ServiceTokenServiceTokenPermissionArray and ServiceTokenServiceTokenPermissionArrayOutput values.
// You can construct a concrete instance of `ServiceTokenServiceTokenPermissionArrayInput` via:
//
//	ServiceTokenServiceTokenPermissionArray{ ServiceTokenServiceTokenPermissionArgs{...} }
type ServiceTokenServiceTokenPermissionArrayInput interface {
	pulumi.Input

	ToServiceTokenServiceTokenPermissionArrayOutput() ServiceTokenServiceTokenPermissionArrayOutput
	ToServiceTokenServiceTokenPermissionArrayOutputWithContext(context.Context) ServiceTokenServiceTokenPermissionArrayOutput
}

type ServiceTokenServiceTokenPermissionArray []ServiceTokenServiceTokenPermissionInput

func (ServiceTokenServiceTokenPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (i ServiceTokenServiceTokenPermissionArray) ToServiceTokenServiceTokenPermissionArrayOutput() ServiceTokenServiceTokenPermissionArrayOutput {
	return i.ToServiceTokenServiceTokenPermissionArrayOutputWithContext(context.Background())
}

func (i ServiceTokenServiceTokenPermissionArray) ToServiceTokenServiceTokenPermissionArrayOutputWithContext(ctx context.Context) ServiceTokenServiceTokenPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTokenServiceTokenPermissionArrayOutput)
}

type ServiceTokenServiceTokenPermissionOutput struct{ *pulumi.OutputState }

func (ServiceTokenServiceTokenPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (o ServiceTokenServiceTokenPermissionOutput) ToServiceTokenServiceTokenPermissionOutput() ServiceTokenServiceTokenPermissionOutput {
	return o
}

func (o ServiceTokenServiceTokenPermissionOutput) ToServiceTokenServiceTokenPermissionOutputWithContext(ctx context.Context) ServiceTokenServiceTokenPermissionOutput {
	return o
}

// Whether or not to apply this permission to all projects for this service token
func (o ServiceTokenServiceTokenPermissionOutput) AllProjects() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceTokenServiceTokenPermission) bool { return v.AllProjects }).(pulumi.BoolOutput)
}

// Set of permissions to apply
func (o ServiceTokenServiceTokenPermissionOutput) PermissionSet() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceTokenServiceTokenPermission) string { return v.PermissionSet }).(pulumi.StringOutput)
}

// Project ID to apply this permission to for this service token
func (o ServiceTokenServiceTokenPermissionOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceTokenServiceTokenPermission) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

type ServiceTokenServiceTokenPermissionArrayOutput struct{ *pulumi.OutputState }

func (ServiceTokenServiceTokenPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (o ServiceTokenServiceTokenPermissionArrayOutput) ToServiceTokenServiceTokenPermissionArrayOutput() ServiceTokenServiceTokenPermissionArrayOutput {
	return o
}

func (o ServiceTokenServiceTokenPermissionArrayOutput) ToServiceTokenServiceTokenPermissionArrayOutputWithContext(ctx context.Context) ServiceTokenServiceTokenPermissionArrayOutput {
	return o
}

func (o ServiceTokenServiceTokenPermissionArrayOutput) Index(i pulumi.IntInput) ServiceTokenServiceTokenPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceTokenServiceTokenPermission {
		return vs[0].([]ServiceTokenServiceTokenPermission)[vs[1].(int)]
	}).(ServiceTokenServiceTokenPermissionOutput)
}

type GetGroupUsersUser struct {
	Email string `pulumi:"email"`
	Id    int    `pulumi:"id"`
}

// GetGroupUsersUserInput is an input type that accepts GetGroupUsersUserArgs and GetGroupUsersUserOutput values.
// You can construct a concrete instance of `GetGroupUsersUserInput` via:
//
//	GetGroupUsersUserArgs{...}
type GetGroupUsersUserInput interface {
	pulumi.Input

	ToGetGroupUsersUserOutput() GetGroupUsersUserOutput
	ToGetGroupUsersUserOutputWithContext(context.Context) GetGroupUsersUserOutput
}

type GetGroupUsersUserArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
	Id    pulumi.IntInput    `pulumi:"id"`
}

func (GetGroupUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUsersUser)(nil)).Elem()
}

func (i GetGroupUsersUserArgs) ToGetGroupUsersUserOutput() GetGroupUsersUserOutput {
	return i.ToGetGroupUsersUserOutputWithContext(context.Background())
}

func (i GetGroupUsersUserArgs) ToGetGroupUsersUserOutputWithContext(ctx context.Context) GetGroupUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupUsersUserOutput)
}

// GetGroupUsersUserArrayInput is an input type that accepts GetGroupUsersUserArray and GetGroupUsersUserArrayOutput values.
// You can construct a concrete instance of `GetGroupUsersUserArrayInput` via:
//
//	GetGroupUsersUserArray{ GetGroupUsersUserArgs{...} }
type GetGroupUsersUserArrayInput interface {
	pulumi.Input

	ToGetGroupUsersUserArrayOutput() GetGroupUsersUserArrayOutput
	ToGetGroupUsersUserArrayOutputWithContext(context.Context) GetGroupUsersUserArrayOutput
}

type GetGroupUsersUserArray []GetGroupUsersUserInput

func (GetGroupUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupUsersUser)(nil)).Elem()
}

func (i GetGroupUsersUserArray) ToGetGroupUsersUserArrayOutput() GetGroupUsersUserArrayOutput {
	return i.ToGetGroupUsersUserArrayOutputWithContext(context.Background())
}

func (i GetGroupUsersUserArray) ToGetGroupUsersUserArrayOutputWithContext(ctx context.Context) GetGroupUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupUsersUserArrayOutput)
}

type GetGroupUsersUserOutput struct{ *pulumi.OutputState }

func (GetGroupUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUsersUser)(nil)).Elem()
}

func (o GetGroupUsersUserOutput) ToGetGroupUsersUserOutput() GetGroupUsersUserOutput {
	return o
}

func (o GetGroupUsersUserOutput) ToGetGroupUsersUserOutputWithContext(ctx context.Context) GetGroupUsersUserOutput {
	return o
}

func (o GetGroupUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetGroupUsersUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupUsersUser) int { return v.Id }).(pulumi.IntOutput)
}

type GetGroupUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetGroupUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupUsersUser)(nil)).Elem()
}

func (o GetGroupUsersUserArrayOutput) ToGetGroupUsersUserArrayOutput() GetGroupUsersUserArrayOutput {
	return o
}

func (o GetGroupUsersUserArrayOutput) ToGetGroupUsersUserArrayOutputWithContext(ctx context.Context) GetGroupUsersUserArrayOutput {
	return o
}

func (o GetGroupUsersUserArrayOutput) Index(i pulumi.IntInput) GetGroupUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupUsersUser {
		return vs[0].([]GetGroupUsersUser)[vs[1].(int)]
	}).(GetGroupUsersUserOutput)
}

type GetJobJobCompletionTriggerCondition struct {
	JobId     int      `pulumi:"jobId"`
	ProjectId int      `pulumi:"projectId"`
	Statuses  []string `pulumi:"statuses"`
}

// GetJobJobCompletionTriggerConditionInput is an input type that accepts GetJobJobCompletionTriggerConditionArgs and GetJobJobCompletionTriggerConditionOutput values.
// You can construct a concrete instance of `GetJobJobCompletionTriggerConditionInput` via:
//
//	GetJobJobCompletionTriggerConditionArgs{...}
type GetJobJobCompletionTriggerConditionInput interface {
	pulumi.Input

	ToGetJobJobCompletionTriggerConditionOutput() GetJobJobCompletionTriggerConditionOutput
	ToGetJobJobCompletionTriggerConditionOutputWithContext(context.Context) GetJobJobCompletionTriggerConditionOutput
}

type GetJobJobCompletionTriggerConditionArgs struct {
	JobId     pulumi.IntInput         `pulumi:"jobId"`
	ProjectId pulumi.IntInput         `pulumi:"projectId"`
	Statuses  pulumi.StringArrayInput `pulumi:"statuses"`
}

func (GetJobJobCompletionTriggerConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobJobCompletionTriggerCondition)(nil)).Elem()
}

func (i GetJobJobCompletionTriggerConditionArgs) ToGetJobJobCompletionTriggerConditionOutput() GetJobJobCompletionTriggerConditionOutput {
	return i.ToGetJobJobCompletionTriggerConditionOutputWithContext(context.Background())
}

func (i GetJobJobCompletionTriggerConditionArgs) ToGetJobJobCompletionTriggerConditionOutputWithContext(ctx context.Context) GetJobJobCompletionTriggerConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobJobCompletionTriggerConditionOutput)
}

// GetJobJobCompletionTriggerConditionArrayInput is an input type that accepts GetJobJobCompletionTriggerConditionArray and GetJobJobCompletionTriggerConditionArrayOutput values.
// You can construct a concrete instance of `GetJobJobCompletionTriggerConditionArrayInput` via:
//
//	GetJobJobCompletionTriggerConditionArray{ GetJobJobCompletionTriggerConditionArgs{...} }
type GetJobJobCompletionTriggerConditionArrayInput interface {
	pulumi.Input

	ToGetJobJobCompletionTriggerConditionArrayOutput() GetJobJobCompletionTriggerConditionArrayOutput
	ToGetJobJobCompletionTriggerConditionArrayOutputWithContext(context.Context) GetJobJobCompletionTriggerConditionArrayOutput
}

type GetJobJobCompletionTriggerConditionArray []GetJobJobCompletionTriggerConditionInput

func (GetJobJobCompletionTriggerConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobJobCompletionTriggerCondition)(nil)).Elem()
}

func (i GetJobJobCompletionTriggerConditionArray) ToGetJobJobCompletionTriggerConditionArrayOutput() GetJobJobCompletionTriggerConditionArrayOutput {
	return i.ToGetJobJobCompletionTriggerConditionArrayOutputWithContext(context.Background())
}

func (i GetJobJobCompletionTriggerConditionArray) ToGetJobJobCompletionTriggerConditionArrayOutputWithContext(ctx context.Context) GetJobJobCompletionTriggerConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobJobCompletionTriggerConditionArrayOutput)
}

type GetJobJobCompletionTriggerConditionOutput struct{ *pulumi.OutputState }

func (GetJobJobCompletionTriggerConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobJobCompletionTriggerCondition)(nil)).Elem()
}

func (o GetJobJobCompletionTriggerConditionOutput) ToGetJobJobCompletionTriggerConditionOutput() GetJobJobCompletionTriggerConditionOutput {
	return o
}

func (o GetJobJobCompletionTriggerConditionOutput) ToGetJobJobCompletionTriggerConditionOutputWithContext(ctx context.Context) GetJobJobCompletionTriggerConditionOutput {
	return o
}

func (o GetJobJobCompletionTriggerConditionOutput) JobId() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobJobCompletionTriggerCondition) int { return v.JobId }).(pulumi.IntOutput)
}

func (o GetJobJobCompletionTriggerConditionOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobJobCompletionTriggerCondition) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o GetJobJobCompletionTriggerConditionOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetJobJobCompletionTriggerCondition) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

type GetJobJobCompletionTriggerConditionArrayOutput struct{ *pulumi.OutputState }

func (GetJobJobCompletionTriggerConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobJobCompletionTriggerCondition)(nil)).Elem()
}

func (o GetJobJobCompletionTriggerConditionArrayOutput) ToGetJobJobCompletionTriggerConditionArrayOutput() GetJobJobCompletionTriggerConditionArrayOutput {
	return o
}

func (o GetJobJobCompletionTriggerConditionArrayOutput) ToGetJobJobCompletionTriggerConditionArrayOutputWithContext(ctx context.Context) GetJobJobCompletionTriggerConditionArrayOutput {
	return o
}

func (o GetJobJobCompletionTriggerConditionArrayOutput) Index(i pulumi.IntInput) GetJobJobCompletionTriggerConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobJobCompletionTriggerCondition {
		return vs[0].([]GetJobJobCompletionTriggerCondition)[vs[1].(int)]
	}).(GetJobJobCompletionTriggerConditionOutput)
}

type GetServiceTokenServiceTokenPermission struct {
	AllProjects   bool   `pulumi:"allProjects"`
	PermissionSet string `pulumi:"permissionSet"`
	ProjectId     int    `pulumi:"projectId"`
}

// GetServiceTokenServiceTokenPermissionInput is an input type that accepts GetServiceTokenServiceTokenPermissionArgs and GetServiceTokenServiceTokenPermissionOutput values.
// You can construct a concrete instance of `GetServiceTokenServiceTokenPermissionInput` via:
//
//	GetServiceTokenServiceTokenPermissionArgs{...}
type GetServiceTokenServiceTokenPermissionInput interface {
	pulumi.Input

	ToGetServiceTokenServiceTokenPermissionOutput() GetServiceTokenServiceTokenPermissionOutput
	ToGetServiceTokenServiceTokenPermissionOutputWithContext(context.Context) GetServiceTokenServiceTokenPermissionOutput
}

type GetServiceTokenServiceTokenPermissionArgs struct {
	AllProjects   pulumi.BoolInput   `pulumi:"allProjects"`
	PermissionSet pulumi.StringInput `pulumi:"permissionSet"`
	ProjectId     pulumi.IntInput    `pulumi:"projectId"`
}

func (GetServiceTokenServiceTokenPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (i GetServiceTokenServiceTokenPermissionArgs) ToGetServiceTokenServiceTokenPermissionOutput() GetServiceTokenServiceTokenPermissionOutput {
	return i.ToGetServiceTokenServiceTokenPermissionOutputWithContext(context.Background())
}

func (i GetServiceTokenServiceTokenPermissionArgs) ToGetServiceTokenServiceTokenPermissionOutputWithContext(ctx context.Context) GetServiceTokenServiceTokenPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceTokenServiceTokenPermissionOutput)
}

// GetServiceTokenServiceTokenPermissionArrayInput is an input type that accepts GetServiceTokenServiceTokenPermissionArray and GetServiceTokenServiceTokenPermissionArrayOutput values.
// You can construct a concrete instance of `GetServiceTokenServiceTokenPermissionArrayInput` via:
//
//	GetServiceTokenServiceTokenPermissionArray{ GetServiceTokenServiceTokenPermissionArgs{...} }
type GetServiceTokenServiceTokenPermissionArrayInput interface {
	pulumi.Input

	ToGetServiceTokenServiceTokenPermissionArrayOutput() GetServiceTokenServiceTokenPermissionArrayOutput
	ToGetServiceTokenServiceTokenPermissionArrayOutputWithContext(context.Context) GetServiceTokenServiceTokenPermissionArrayOutput
}

type GetServiceTokenServiceTokenPermissionArray []GetServiceTokenServiceTokenPermissionInput

func (GetServiceTokenServiceTokenPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (i GetServiceTokenServiceTokenPermissionArray) ToGetServiceTokenServiceTokenPermissionArrayOutput() GetServiceTokenServiceTokenPermissionArrayOutput {
	return i.ToGetServiceTokenServiceTokenPermissionArrayOutputWithContext(context.Background())
}

func (i GetServiceTokenServiceTokenPermissionArray) ToGetServiceTokenServiceTokenPermissionArrayOutputWithContext(ctx context.Context) GetServiceTokenServiceTokenPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceTokenServiceTokenPermissionArrayOutput)
}

type GetServiceTokenServiceTokenPermissionOutput struct{ *pulumi.OutputState }

func (GetServiceTokenServiceTokenPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (o GetServiceTokenServiceTokenPermissionOutput) ToGetServiceTokenServiceTokenPermissionOutput() GetServiceTokenServiceTokenPermissionOutput {
	return o
}

func (o GetServiceTokenServiceTokenPermissionOutput) ToGetServiceTokenServiceTokenPermissionOutputWithContext(ctx context.Context) GetServiceTokenServiceTokenPermissionOutput {
	return o
}

func (o GetServiceTokenServiceTokenPermissionOutput) AllProjects() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceTokenServiceTokenPermission) bool { return v.AllProjects }).(pulumi.BoolOutput)
}

func (o GetServiceTokenServiceTokenPermissionOutput) PermissionSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTokenServiceTokenPermission) string { return v.PermissionSet }).(pulumi.StringOutput)
}

func (o GetServiceTokenServiceTokenPermissionOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceTokenServiceTokenPermission) int { return v.ProjectId }).(pulumi.IntOutput)
}

type GetServiceTokenServiceTokenPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetServiceTokenServiceTokenPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceTokenServiceTokenPermission)(nil)).Elem()
}

func (o GetServiceTokenServiceTokenPermissionArrayOutput) ToGetServiceTokenServiceTokenPermissionArrayOutput() GetServiceTokenServiceTokenPermissionArrayOutput {
	return o
}

func (o GetServiceTokenServiceTokenPermissionArrayOutput) ToGetServiceTokenServiceTokenPermissionArrayOutputWithContext(ctx context.Context) GetServiceTokenServiceTokenPermissionArrayOutput {
	return o
}

func (o GetServiceTokenServiceTokenPermissionArrayOutput) Index(i pulumi.IntInput) GetServiceTokenServiceTokenPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceTokenServiceTokenPermission {
		return vs[0].([]GetServiceTokenServiceTokenPermission)[vs[1].(int)]
	}).(GetServiceTokenServiceTokenPermissionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupGroupPermissionInput)(nil)).Elem(), GroupGroupPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupGroupPermissionArrayInput)(nil)).Elem(), GroupGroupPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobJobCompletionTriggerConditionInput)(nil)).Elem(), JobJobCompletionTriggerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobJobCompletionTriggerConditionPtrInput)(nil)).Elem(), JobJobCompletionTriggerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTokenServiceTokenPermissionInput)(nil)).Elem(), ServiceTokenServiceTokenPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTokenServiceTokenPermissionArrayInput)(nil)).Elem(), ServiceTokenServiceTokenPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupUsersUserInput)(nil)).Elem(), GetGroupUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupUsersUserArrayInput)(nil)).Elem(), GetGroupUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobJobCompletionTriggerConditionInput)(nil)).Elem(), GetJobJobCompletionTriggerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobJobCompletionTriggerConditionArrayInput)(nil)).Elem(), GetJobJobCompletionTriggerConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceTokenServiceTokenPermissionInput)(nil)).Elem(), GetServiceTokenServiceTokenPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceTokenServiceTokenPermissionArrayInput)(nil)).Elem(), GetServiceTokenServiceTokenPermissionArray{})
	pulumi.RegisterOutputType(GroupGroupPermissionOutput{})
	pulumi.RegisterOutputType(GroupGroupPermissionArrayOutput{})
	pulumi.RegisterOutputType(JobJobCompletionTriggerConditionOutput{})
	pulumi.RegisterOutputType(JobJobCompletionTriggerConditionPtrOutput{})
	pulumi.RegisterOutputType(ServiceTokenServiceTokenPermissionOutput{})
	pulumi.RegisterOutputType(ServiceTokenServiceTokenPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetGroupUsersUserOutput{})
	pulumi.RegisterOutputType(GetGroupUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetJobJobCompletionTriggerConditionOutput{})
	pulumi.RegisterOutputType(GetJobJobCompletionTriggerConditionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceTokenServiceTokenPermissionOutput{})
	pulumi.RegisterOutputType(GetServiceTokenServiceTokenPermissionArrayOutput{})
}
