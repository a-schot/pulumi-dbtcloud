// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/a-schot/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LegacyGetBigqueryConnection(ctx *pulumi.Context, args *LegacyGetBigqueryConnectionArgs, opts ...pulumi.InvokeOption) (*LegacyGetBigqueryConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LegacyGetBigqueryConnectionResult
	err := ctx.Invoke("dbtcloud:index/legacyGetBigqueryConnection:LegacyGetBigqueryConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking LegacyGetBigqueryConnection.
type LegacyGetBigqueryConnectionArgs struct {
	ConnectionId int `pulumi:"connectionId"`
	ProjectId    int `pulumi:"projectId"`
}

// A collection of values returned by LegacyGetBigqueryConnection.
type LegacyGetBigqueryConnectionResult struct {
	AuthProviderX509CertUrl string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 string `pulumi:"authUri"`
	ClientEmail             string `pulumi:"clientEmail"`
	ClientId                string `pulumi:"clientId"`
	ClientX509CertUrl       string `pulumi:"clientX509CertUrl"`
	ConnectionId            int    `pulumi:"connectionId"`
	DataprocClusterName     string `pulumi:"dataprocClusterName"`
	DataprocRegion          string `pulumi:"dataprocRegion"`
	ExecutionProject        string `pulumi:"executionProject"`
	GcpProjectId            string `pulumi:"gcpProjectId"`
	GcsBucket               string `pulumi:"gcsBucket"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string `pulumi:"id"`
	IsActive             bool   `pulumi:"isActive"`
	IsConfiguredForOauth bool   `pulumi:"isConfiguredForOauth"`
	Location             string `pulumi:"location"`
	MaximumBytesBilled   int    `pulumi:"maximumBytesBilled"`
	Name                 string `pulumi:"name"`
	Priority             string `pulumi:"priority"`
	PrivateKey           string `pulumi:"privateKey"`
	PrivateKeyId         string `pulumi:"privateKeyId"`
	ProjectId            int    `pulumi:"projectId"`
	Retries              int    `pulumi:"retries"`
	TimeoutSeconds       int    `pulumi:"timeoutSeconds"`
	TokenUri             string `pulumi:"tokenUri"`
	Type                 string `pulumi:"type"`
}

func LegacyGetBigqueryConnectionOutput(ctx *pulumi.Context, args LegacyGetBigqueryConnectionOutputArgs, opts ...pulumi.InvokeOption) LegacyGetBigqueryConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LegacyGetBigqueryConnectionResult, error) {
			args := v.(LegacyGetBigqueryConnectionArgs)
			r, err := LegacyGetBigqueryConnection(ctx, &args, opts...)
			var s LegacyGetBigqueryConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LegacyGetBigqueryConnectionResultOutput)
}

// A collection of arguments for invoking LegacyGetBigqueryConnection.
type LegacyGetBigqueryConnectionOutputArgs struct {
	ConnectionId pulumi.IntInput `pulumi:"connectionId"`
	ProjectId    pulumi.IntInput `pulumi:"projectId"`
}

func (LegacyGetBigqueryConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetBigqueryConnectionArgs)(nil)).Elem()
}

// A collection of values returned by LegacyGetBigqueryConnection.
type LegacyGetBigqueryConnectionResultOutput struct{ *pulumi.OutputState }

func (LegacyGetBigqueryConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyGetBigqueryConnectionResult)(nil)).Elem()
}

func (o LegacyGetBigqueryConnectionResultOutput) ToLegacyGetBigqueryConnectionResultOutput() LegacyGetBigqueryConnectionResultOutput {
	return o
}

func (o LegacyGetBigqueryConnectionResultOutput) ToLegacyGetBigqueryConnectionResultOutputWithContext(ctx context.Context) LegacyGetBigqueryConnectionResultOutput {
	return o
}

func (o LegacyGetBigqueryConnectionResultOutput) AuthProviderX509CertUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.AuthProviderX509CertUrl }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) AuthUri() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.AuthUri }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) ClientEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.ClientEmail }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) ClientX509CertUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.ClientX509CertUrl }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) ConnectionId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) int { return v.ConnectionId }).(pulumi.IntOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) DataprocClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.DataprocClusterName }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) DataprocRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.DataprocRegion }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) ExecutionProject() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.ExecutionProject }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) GcsBucket() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.GcsBucket }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LegacyGetBigqueryConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) bool { return v.IsActive }).(pulumi.BoolOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) IsConfiguredForOauth() pulumi.BoolOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) bool { return v.IsConfiguredForOauth }).(pulumi.BoolOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) MaximumBytesBilled() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) int { return v.MaximumBytesBilled }).(pulumi.IntOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.Priority }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) PrivateKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.PrivateKeyId }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) int { return v.Retries }).(pulumi.IntOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) TokenUri() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.TokenUri }).(pulumi.StringOutput)
}

func (o LegacyGetBigqueryConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LegacyGetBigqueryConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LegacyGetBigqueryConnectionResultOutput{})
}
