// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/** @deprecated Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource */
export function legacyGetServiceToken(args: LegacyGetServiceTokenArgs, opts?: pulumi.InvokeOptions): Promise<LegacyGetServiceTokenResult> {
    pulumi.log.warn("legacyGetServiceToken is deprecated: Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/legacyGetServiceToken:LegacyGetServiceToken", {
        "serviceTokenId": args.serviceTokenId,
    }, opts);
}

/**
 * A collection of arguments for invoking LegacyGetServiceToken.
 */
export interface LegacyGetServiceTokenArgs {
    serviceTokenId: number;
}

/**
 * A collection of values returned by LegacyGetServiceToken.
 */
export interface LegacyGetServiceTokenResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly serviceTokenId: number;
    readonly serviceTokenPermissions: outputs.LegacyGetServiceTokenServiceTokenPermission[];
    readonly uid: string;
}
/** @deprecated Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource */
export function legacyGetServiceTokenOutput(args: LegacyGetServiceTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<LegacyGetServiceTokenResult> {
    return pulumi.output(args).apply((a: any) => legacyGetServiceToken(a, opts))
}

/**
 * A collection of arguments for invoking LegacyGetServiceToken.
 */
export interface LegacyGetServiceTokenOutputArgs {
    serviceTokenId: pulumi.Input<number>;
}
