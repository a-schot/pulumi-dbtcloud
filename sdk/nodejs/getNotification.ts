// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * const myNotification = dbtcloud.getNotification({
 *     notificationId: 12345,
 * });
 * ```
 */
export function getNotification(args: GetNotificationArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getNotification:getNotification", {
        "notificationId": args.notificationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationArgs {
    /**
     * ID of the notification
     */
    notificationId: number;
}

/**
 * A collection of values returned by getNotification.
 */
export interface GetNotificationResult {
    /**
     * The external email to receive the notification
     */
    readonly externalEmail: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID of the notification
     */
    readonly notificationId: number;
    /**
     * Type of notification (1 = dbt Cloud user email (default): does not require an external*email ; 4 = external email: requires setting an external*email)
     */
    readonly notificationType: number;
    /**
     * List of job IDs to trigger the webhook on cancel
     */
    readonly onCancels: number[];
    /**
     * List of job IDs to trigger the webhook on failure
     */
    readonly onFailures: number[];
    /**
     * List of job IDs to trigger the webhook on success
     */
    readonly onSuccesses: number[];
    /**
     * Internal dbt Cloud User ID. Must be the userId for an existing user even if the notification is an external one
     */
    readonly userId: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * const myNotification = dbtcloud.getNotification({
 *     notificationId: 12345,
 * });
 * ```
 */
export function getNotificationOutput(args: GetNotificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationResult> {
    return pulumi.output(args).apply((a: any) => getNotification(a, opts))
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationOutputArgs {
    /**
     * ID of the notification
     */
    notificationId: pulumi.Input<number>;
}
