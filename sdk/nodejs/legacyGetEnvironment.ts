// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function legacyGetEnvironment(args: LegacyGetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<LegacyGetEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/legacyGetEnvironment:LegacyGetEnvironment", {
        "environmentId": args.environmentId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking LegacyGetEnvironment.
 */
export interface LegacyGetEnvironmentArgs {
    environmentId: number;
    projectId: number;
}

/**
 * A collection of values returned by LegacyGetEnvironment.
 */
export interface LegacyGetEnvironmentResult {
    readonly credentialId: number;
    readonly customBranch: string;
    readonly dbtVersion: string;
    readonly deploymentType: string;
    readonly environmentId: number;
    readonly extendedAttributesId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isActive: boolean;
    readonly name: string;
    readonly projectId: number;
    readonly type: string;
    readonly useCustomBranch: boolean;
}
export function legacyGetEnvironmentOutput(args: LegacyGetEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<LegacyGetEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => legacyGetEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking LegacyGetEnvironment.
 */
export interface LegacyGetEnvironmentOutputArgs {
    environmentId: pulumi.Input<number>;
    projectId: pulumi.Input<number>;
}
