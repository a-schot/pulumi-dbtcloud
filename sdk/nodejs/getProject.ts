// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProject(args?: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getProject:getProject", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectArgs {
    /**
     * Given name for project
     */
    name?: string;
    /**
     * ID of the project to represent
     */
    projectId?: number;
}

/**
 * A collection of values returned by getProject.
 */
export interface GetProjectResult {
    /**
     * ID of the connection associated with the project
     */
    readonly connectionId: number;
    /**
     * ID of Job for the documentation
     */
    readonly docsJobId: number;
    /**
     * ID of Job for source freshness
     */
    readonly freshnessJobId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Given name for project
     */
    readonly name: string;
    /**
     * ID of the project to represent
     */
    readonly projectId?: number;
    /**
     * ID of the repository associated with the project
     */
    readonly repositoryId: number;
    /**
     * Project state should be 1 = active, as 2 = deleted
     */
    readonly state: number;
}
export function getProjectOutput(args?: GetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectResult> {
    return pulumi.output(args).apply((a: any) => getProject(a, opts))
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectOutputArgs {
    /**
     * Given name for project
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the project to represent
     */
    projectId?: pulumi.Input<number>;
}
