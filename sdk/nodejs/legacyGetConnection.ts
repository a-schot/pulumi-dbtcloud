// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function legacyGetConnection(args: LegacyGetConnectionArgs, opts?: pulumi.InvokeOptions): Promise<LegacyGetConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/legacyGetConnection:LegacyGetConnection", {
        "connectionId": args.connectionId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking LegacyGetConnection.
 */
export interface LegacyGetConnectionArgs {
    connectionId: number;
    projectId: number;
}

/**
 * A collection of values returned by LegacyGetConnection.
 */
export interface LegacyGetConnectionResult {
    readonly account: string;
    readonly allowKeepAlive: boolean;
    readonly allowSso: boolean;
    readonly connectionId: number;
    readonly database: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isActive: boolean;
    readonly name: string;
    readonly privateLinkEndpointId: string;
    readonly projectId: number;
    readonly role: string;
    readonly type: string;
    readonly warehouse: string;
}
export function legacyGetConnectionOutput(args: LegacyGetConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<LegacyGetConnectionResult> {
    return pulumi.output(args).apply((a: any) => legacyGetConnection(a, opts))
}

/**
 * A collection of arguments for invoking LegacyGetConnection.
 */
export interface LegacyGetConnectionOutputArgs {
    connectionId: pulumi.Input<number>;
    projectId: pulumi.Input<number>;
}
