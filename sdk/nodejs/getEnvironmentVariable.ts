// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnvironmentVariable(args: GetEnvironmentVariableArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentVariableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getEnvironmentVariable:getEnvironmentVariable", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironmentVariable.
 */
export interface GetEnvironmentVariableArgs {
    /**
     * Name for the variable
     */
    name: string;
    /**
     * Project ID the variable exists in
     */
    projectId: number;
}

/**
 * A collection of values returned by getEnvironmentVariable.
 */
export interface GetEnvironmentVariableResult {
    /**
     * Map containing the environment variables
     */
    readonly environmentValues: {[key: string]: any};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name for the variable
     */
    readonly name: string;
    /**
     * Project ID the variable exists in
     */
    readonly projectId: number;
}
export function getEnvironmentVariableOutput(args: GetEnvironmentVariableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentVariableResult> {
    return pulumi.output(args).apply((a: any) => getEnvironmentVariable(a, opts))
}

/**
 * A collection of arguments for invoking getEnvironmentVariable.
 */
export interface GetEnvironmentVariableOutputArgs {
    /**
     * Name for the variable
     */
    name: pulumi.Input<string>;
    /**
     * Project ID the variable exists in
     */
    projectId: pulumi.Input<number>;
}
