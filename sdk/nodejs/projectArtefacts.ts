// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@aschot/pulumi-dbtcloud";
 *
 * // NOTE for customers using the LEGACY dbt_cloud provider:
 * const myProjectArtefacts = new dbtcloud.ProjectArtefacts("myProjectArtefacts", {
 *     projectId: dbtcloud_project.dbt_project.id,
 *     docsJobId: dbtcloud_job.prod_job.id,
 *     freshnessJobId: dbtcloud_job.prod_job.id,
 * });
 * ```
 *
 * ## Import
 *
 * Import using a project ID found in the URL or via the API.
 *
 * ```sh
 * $ pulumi import dbtcloud:index/projectArtefacts:ProjectArtefacts my_artefacts "project_id"
 * ```
 *
 * ```sh
 * $ pulumi import dbtcloud:index/projectArtefacts:ProjectArtefacts my_artefacts 12345
 * ```
 */
export class ProjectArtefacts extends pulumi.CustomResource {
    /**
     * Get an existing ProjectArtefacts resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectArtefactsState, opts?: pulumi.CustomResourceOptions): ProjectArtefacts {
        return new ProjectArtefacts(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dbtcloud:index/projectArtefacts:ProjectArtefacts';

    /**
     * Returns true if the given object is an instance of ProjectArtefacts.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectArtefacts {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectArtefacts.__pulumiType;
    }

    /**
     * Docs Job ID
     */
    public readonly docsJobId!: pulumi.Output<number | undefined>;
    /**
     * Freshness Job ID
     */
    public readonly freshnessJobId!: pulumi.Output<number | undefined>;
    /**
     * Project ID
     */
    public readonly projectId!: pulumi.Output<number>;

    /**
     * Create a ProjectArtefacts resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArtefactsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArtefactsArgs | ProjectArtefactsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectArtefactsState | undefined;
            resourceInputs["docsJobId"] = state ? state.docsJobId : undefined;
            resourceInputs["freshnessJobId"] = state ? state.freshnessJobId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
        } else {
            const args = argsOrState as ProjectArtefactsArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["docsJobId"] = args ? args.docsJobId : undefined;
            resourceInputs["freshnessJobId"] = args ? args.freshnessJobId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectArtefacts.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProjectArtefacts resources.
 */
export interface ProjectArtefactsState {
    /**
     * Docs Job ID
     */
    docsJobId?: pulumi.Input<number>;
    /**
     * Freshness Job ID
     */
    freshnessJobId?: pulumi.Input<number>;
    /**
     * Project ID
     */
    projectId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ProjectArtefacts resource.
 */
export interface ProjectArtefactsArgs {
    /**
     * Docs Job ID
     */
    docsJobId?: pulumi.Input<number>;
    /**
     * Freshness Job ID
     */
    freshnessJobId?: pulumi.Input<number>;
    /**
     * Project ID
     */
    projectId: pulumi.Input<number>;
}
