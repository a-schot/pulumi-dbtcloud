// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/** @deprecated Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource */
export function legacyGetProject(args?: LegacyGetProjectArgs, opts?: pulumi.InvokeOptions): Promise<LegacyGetProjectResult> {
    pulumi.log.warn("legacyGetProject is deprecated: Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/legacyGetProject:LegacyGetProject", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking LegacyGetProject.
 */
export interface LegacyGetProjectArgs {
    name?: string;
    projectId?: number;
}

/**
 * A collection of values returned by LegacyGetProject.
 */
export interface LegacyGetProjectResult {
    readonly connectionId: number;
    readonly docsJobId: number;
    readonly freshnessJobId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly projectId?: number;
    readonly repositoryId: number;
    readonly state: number;
}
/** @deprecated Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource */
export function legacyGetProjectOutput(args?: LegacyGetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<LegacyGetProjectResult> {
    return pulumi.output(args).apply((a: any) => legacyGetProject(a, opts))
}

/**
 * A collection of arguments for invoking LegacyGetProject.
 */
export interface LegacyGetProjectOutputArgs {
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<number>;
}
