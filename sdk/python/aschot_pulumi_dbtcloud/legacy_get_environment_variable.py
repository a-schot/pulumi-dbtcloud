# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'LegacyGetEnvironmentVariableResult',
    'AwaitableLegacyGetEnvironmentVariableResult',
    'legacy_get_environment_variable',
    'legacy_get_environment_variable_output',
]

warnings.warn("""Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource""", DeprecationWarning)

@pulumi.output_type
class LegacyGetEnvironmentVariableResult:
    """
    A collection of values returned by LegacyGetEnvironmentVariable.
    """
    def __init__(__self__, environment_values=None, id=None, name=None, project_id=None):
        if environment_values and not isinstance(environment_values, dict):
            raise TypeError("Expected argument 'environment_values' to be a dict")
        pulumi.set(__self__, "environment_values", environment_values)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if project_id and not isinstance(project_id, int):
            raise TypeError("Expected argument 'project_id' to be a int")
        pulumi.set(__self__, "project_id", project_id)

    @property
    @pulumi.getter(name="environmentValues")
    def environment_values(self) -> Mapping[str, Any]:
        return pulumi.get(self, "environment_values")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> int:
        return pulumi.get(self, "project_id")


class AwaitableLegacyGetEnvironmentVariableResult(LegacyGetEnvironmentVariableResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return LegacyGetEnvironmentVariableResult(
            environment_values=self.environment_values,
            id=self.id,
            name=self.name,
            project_id=self.project_id)


def legacy_get_environment_variable(name: Optional[str] = None,
                                    project_id: Optional[int] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableLegacyGetEnvironmentVariableResult:
    """
    Use this data source to access information about an existing resource.
    """
    pulumi.log.warn("""legacy_get_environment_variable is deprecated: Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource""")
    __args__ = dict()
    __args__['name'] = name
    __args__['projectId'] = project_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('dbtcloud:index/legacyGetEnvironmentVariable:LegacyGetEnvironmentVariable', __args__, opts=opts, typ=LegacyGetEnvironmentVariableResult).value

    return AwaitableLegacyGetEnvironmentVariableResult(
        environment_values=pulumi.get(__ret__, 'environment_values'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        project_id=pulumi.get(__ret__, 'project_id'))


@_utilities.lift_output_func(legacy_get_environment_variable)
def legacy_get_environment_variable_output(name: Optional[pulumi.Input[str]] = None,
                                           project_id: Optional[pulumi.Input[int]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[LegacyGetEnvironmentVariableResult]:
    """
    Use this data source to access information about an existing resource.
    """
    pulumi.log.warn("""legacy_get_environment_variable is deprecated: Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource""")
    ...
