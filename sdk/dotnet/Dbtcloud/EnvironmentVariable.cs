// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    /// <summary>
    /// *Note*: Some upstream resources can be slow to create, so if creating a project or environment at
    /// the same time as the environment variables, it's recommended to use the `depends_on` meta argument.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Dbtcloud = ASchot.Pulumi.Dbtcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // NOTE for customers using the LEGACY dbt_cloud provider:
    ///     var dbtMyEnvVar = new Dbtcloud.EnvironmentVariable("dbtMyEnvVar", new()
    ///     {
    ///         ProjectId = dbtcloud_project.Dbt_project.Id,
    ///         EnvironmentValues = 
    ///         {
    ///             { "project", "my_project_level_value" },
    ///             { "Dev", "my_env_level_value" },
    ///             { "CI", "my_ci_override_value" },
    ///             { "Prod", "my_prod_override_value" },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             dbtcloud_project.Dbt_project,
    ///             dbtcloud_environment.Dev_env,
    ///             dbtcloud_environment.Ci_env,
    ///             dbtcloud_environment.Prod_env,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import using a project ID and environment variable name found in the URL and UI or via the API.
    /// 
    /// ```sh
    ///  $ pulumi import dbtcloud:index/environmentVariable:EnvironmentVariable test_environment_variable "project_id:environment_variable_name"
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import dbtcloud:index/environmentVariable:EnvironmentVariable test_environment_variable 12345:DBT_ENV_VAR
    /// ```
    /// </summary>
    [DbtcloudResourceType("dbtcloud:index/environmentVariable:EnvironmentVariable")]
    public partial class EnvironmentVariable : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Map from environment names to respective variable value, a special key `project` should be set for the project default variable value. This field is not set as sensitive so take precautions when using secret environment variables.
        /// </summary>
        [Output("environmentValues")]
        public Output<ImmutableDictionary<string, object>> EnvironmentValues { get; private set; } = null!;

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Project for the variable to be created in
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a EnvironmentVariable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnvironmentVariable(string name, EnvironmentVariableArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/environmentVariable:EnvironmentVariable", name, args ?? new EnvironmentVariableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnvironmentVariable(string name, Input<string> id, EnvironmentVariableState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/environmentVariable:EnvironmentVariable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github::api.github.com/a-schot/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnvironmentVariable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnvironmentVariable Get(string name, Input<string> id, EnvironmentVariableState? state = null, CustomResourceOptions? options = null)
        {
            return new EnvironmentVariable(name, id, state, options);
        }
    }

    public sealed class EnvironmentVariableArgs : global::Pulumi.ResourceArgs
    {
        [Input("environmentValues", required: true)]
        private InputMap<object>? _environmentValues;

        /// <summary>
        /// Map from environment names to respective variable value, a special key `project` should be set for the project default variable value. This field is not set as sensitive so take precautions when using secret environment variables.
        /// </summary>
        public InputMap<object> EnvironmentValues
        {
            get => _environmentValues ?? (_environmentValues = new InputMap<object>());
            set => _environmentValues = value;
        }

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project for the variable to be created in
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        public EnvironmentVariableArgs()
        {
        }
        public static new EnvironmentVariableArgs Empty => new EnvironmentVariableArgs();
    }

    public sealed class EnvironmentVariableState : global::Pulumi.ResourceArgs
    {
        [Input("environmentValues")]
        private InputMap<object>? _environmentValues;

        /// <summary>
        /// Map from environment names to respective variable value, a special key `project` should be set for the project default variable value. This field is not set as sensitive so take precautions when using secret environment variables.
        /// </summary>
        public InputMap<object> EnvironmentValues
        {
            get => _environmentValues ?? (_environmentValues = new InputMap<object>());
            set => _environmentValues = value;
        }

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project for the variable to be created in
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        public EnvironmentVariableState()
        {
        }
        public static new EnvironmentVariableState Empty => new EnvironmentVariableState();
    }
}
