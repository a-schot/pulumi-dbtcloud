// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    [Obsolete(@"Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource")]
    [DbtcloudResourceType("dbtcloud:index/legacyEnvironmentVariable:LegacyEnvironmentVariable")]
    public partial class LegacyEnvironmentVariable : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Map from environment names to respective variable value, a special key `project` should be set for the project default
        /// variable value. This field is not set as sensitive so take precautions when using secret environment variables.
        /// </summary>
        [Output("environmentValues")]
        public Output<ImmutableDictionary<string, object>> EnvironmentValues { get; private set; } = null!;

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Project for the variable to be created in
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a LegacyEnvironmentVariable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LegacyEnvironmentVariable(string name, LegacyEnvironmentVariableArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/legacyEnvironmentVariable:LegacyEnvironmentVariable", name, args ?? new LegacyEnvironmentVariableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LegacyEnvironmentVariable(string name, Input<string> id, LegacyEnvironmentVariableState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/legacyEnvironmentVariable:LegacyEnvironmentVariable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/a-schot/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LegacyEnvironmentVariable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LegacyEnvironmentVariable Get(string name, Input<string> id, LegacyEnvironmentVariableState? state = null, CustomResourceOptions? options = null)
        {
            return new LegacyEnvironmentVariable(name, id, state, options);
        }
    }

    public sealed class LegacyEnvironmentVariableArgs : global::Pulumi.ResourceArgs
    {
        [Input("environmentValues", required: true)]
        private InputMap<object>? _environmentValues;

        /// <summary>
        /// Map from environment names to respective variable value, a special key `project` should be set for the project default
        /// variable value. This field is not set as sensitive so take precautions when using secret environment variables.
        /// </summary>
        public InputMap<object> EnvironmentValues
        {
            get => _environmentValues ?? (_environmentValues = new InputMap<object>());
            set => _environmentValues = value;
        }

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project for the variable to be created in
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        public LegacyEnvironmentVariableArgs()
        {
        }
        public static new LegacyEnvironmentVariableArgs Empty => new LegacyEnvironmentVariableArgs();
    }

    public sealed class LegacyEnvironmentVariableState : global::Pulumi.ResourceArgs
    {
        [Input("environmentValues")]
        private InputMap<object>? _environmentValues;

        /// <summary>
        /// Map from environment names to respective variable value, a special key `project` should be set for the project default
        /// variable value. This field is not set as sensitive so take precautions when using secret environment variables.
        /// </summary>
        public InputMap<object> EnvironmentValues
        {
            get => _environmentValues ?? (_environmentValues = new InputMap<object>());
            set => _environmentValues = value;
        }

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project for the variable to be created in
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        public LegacyEnvironmentVariableState()
        {
        }
        public static new LegacyEnvironmentVariableState Empty => new LegacyEnvironmentVariableState();
    }
}
