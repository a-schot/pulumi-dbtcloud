// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    [Obsolete(@"Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource")]
    public static class LegacyGetServiceToken
    {
        public static Task<LegacyGetServiceTokenResult> InvokeAsync(LegacyGetServiceTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<LegacyGetServiceTokenResult>("dbtcloud:index/legacyGetServiceToken:LegacyGetServiceToken", args ?? new LegacyGetServiceTokenArgs(), options.WithDefaults());

        public static Output<LegacyGetServiceTokenResult> Invoke(LegacyGetServiceTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<LegacyGetServiceTokenResult>("dbtcloud:index/legacyGetServiceToken:LegacyGetServiceToken", args ?? new LegacyGetServiceTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class LegacyGetServiceTokenArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceTokenId", required: true)]
        public int ServiceTokenId { get; set; }

        public LegacyGetServiceTokenArgs()
        {
        }
        public static new LegacyGetServiceTokenArgs Empty => new LegacyGetServiceTokenArgs();
    }

    public sealed class LegacyGetServiceTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceTokenId", required: true)]
        public Input<int> ServiceTokenId { get; set; } = null!;

        public LegacyGetServiceTokenInvokeArgs()
        {
        }
        public static new LegacyGetServiceTokenInvokeArgs Empty => new LegacyGetServiceTokenInvokeArgs();
    }


    [OutputType]
    public sealed class LegacyGetServiceTokenResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly int ServiceTokenId;
        public readonly ImmutableArray<Outputs.LegacyGetServiceTokenServiceTokenPermissionResult> ServiceTokenPermissions;
        public readonly string Uid;

        [OutputConstructor]
        private LegacyGetServiceTokenResult(
            string id,

            string name,

            int serviceTokenId,

            ImmutableArray<Outputs.LegacyGetServiceTokenServiceTokenPermissionResult> serviceTokenPermissions,

            string uid)
        {
            Id = id;
            Name = name;
            ServiceTokenId = serviceTokenId;
            ServiceTokenPermissions = serviceTokenPermissions;
            Uid = uid;
        }
    }
}
