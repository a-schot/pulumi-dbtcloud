// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    [Obsolete(@"Do not use! This resource is mapped from the legacy Terraform `dbt_cloud_`-prefixed resource/datasource")]
    public static class LegacyGetPostgresCredential
    {
        public static Task<LegacyGetPostgresCredentialResult> InvokeAsync(LegacyGetPostgresCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<LegacyGetPostgresCredentialResult>("dbtcloud:index/legacyGetPostgresCredential:LegacyGetPostgresCredential", args ?? new LegacyGetPostgresCredentialArgs(), options.WithDefaults());

        public static Output<LegacyGetPostgresCredentialResult> Invoke(LegacyGetPostgresCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<LegacyGetPostgresCredentialResult>("dbtcloud:index/legacyGetPostgresCredential:LegacyGetPostgresCredential", args ?? new LegacyGetPostgresCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class LegacyGetPostgresCredentialArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentialId", required: true)]
        public int CredentialId { get; set; }

        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        public LegacyGetPostgresCredentialArgs()
        {
        }
        public static new LegacyGetPostgresCredentialArgs Empty => new LegacyGetPostgresCredentialArgs();
    }

    public sealed class LegacyGetPostgresCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentialId", required: true)]
        public Input<int> CredentialId { get; set; } = null!;

        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        public LegacyGetPostgresCredentialInvokeArgs()
        {
        }
        public static new LegacyGetPostgresCredentialInvokeArgs Empty => new LegacyGetPostgresCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class LegacyGetPostgresCredentialResult
    {
        public readonly int CredentialId;
        public readonly string DefaultSchema;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsActive;
        public readonly int NumThreads;
        public readonly int ProjectId;
        public readonly string Username;

        [OutputConstructor]
        private LegacyGetPostgresCredentialResult(
            int credentialId,

            string defaultSchema,

            string id,

            bool isActive,

            int numThreads,

            int projectId,

            string username)
        {
            CredentialId = credentialId;
            DefaultSchema = defaultSchema;
            Id = id;
            IsActive = isActive;
            NumThreads = numThreads;
            ProjectId = projectId;
            Username = username;
        }
    }
}
