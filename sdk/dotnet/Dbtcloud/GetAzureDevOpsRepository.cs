// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    public static class GetAzureDevOpsRepository
    {
        /// <summary>
        /// Use this data source to retrieve the ID and details of an Azure Dev Ops repository 
        /// based on its name and the ID of the Azure Dev Ops project it belongs to.
        /// 		
        /// This data source requires connecting with a user token and doesn't work with a service token.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dbtcloud = Pulumi.Dbtcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myAdoRepository = Dbtcloud.GetAzureDevOpsRepository.Invoke(new()
        ///     {
        ///         Name = "my-repo-name",
        ///         AzureDevOpsProjectId = data.Dbtcloud_azure_dev_ops_project.My_ado_project.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAzureDevOpsRepositoryResult> InvokeAsync(GetAzureDevOpsRepositoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzureDevOpsRepositoryResult>("dbtcloud:index/getAzureDevOpsRepository:getAzureDevOpsRepository", args ?? new GetAzureDevOpsRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve the ID and details of an Azure Dev Ops repository 
        /// based on its name and the ID of the Azure Dev Ops project it belongs to.
        /// 		
        /// This data source requires connecting with a user token and doesn't work with a service token.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dbtcloud = Pulumi.Dbtcloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myAdoRepository = Dbtcloud.GetAzureDevOpsRepository.Invoke(new()
        ///     {
        ///         Name = "my-repo-name",
        ///         AzureDevOpsProjectId = data.Dbtcloud_azure_dev_ops_project.My_ado_project.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAzureDevOpsRepositoryResult> Invoke(GetAzureDevOpsRepositoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzureDevOpsRepositoryResult>("dbtcloud:index/getAzureDevOpsRepository:getAzureDevOpsRepository", args ?? new GetAzureDevOpsRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureDevOpsRepositoryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The internal Azure Dev Ops ID of the ADO Project. Can be retrieved using the data source dbtcloud*azure*dev*ops*project and the project name
        /// </summary>
        [Input("azureDevOpsProjectId", required: true)]
        public string AzureDevOpsProjectId { get; set; } = null!;

        /// <summary>
        /// The name of the ADO repository
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetAzureDevOpsRepositoryArgs()
        {
        }
        public static new GetAzureDevOpsRepositoryArgs Empty => new GetAzureDevOpsRepositoryArgs();
    }

    public sealed class GetAzureDevOpsRepositoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The internal Azure Dev Ops ID of the ADO Project. Can be retrieved using the data source dbtcloud*azure*dev*ops*project and the project name
        /// </summary>
        [Input("azureDevOpsProjectId", required: true)]
        public Input<string> AzureDevOpsProjectId { get; set; } = null!;

        /// <summary>
        /// The name of the ADO repository
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAzureDevOpsRepositoryInvokeArgs()
        {
        }
        public static new GetAzureDevOpsRepositoryInvokeArgs Empty => new GetAzureDevOpsRepositoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureDevOpsRepositoryResult
    {
        /// <summary>
        /// The internal Azure Dev Ops ID of the ADO Project. Can be retrieved using the data source dbtcloud*azure*dev*ops*project and the project name
        /// </summary>
        public readonly string AzureDevOpsProjectId;
        /// <summary>
        /// The default branch of the ADO repository
        /// </summary>
        public readonly string DefaultBranch;
        /// <summary>
        /// The URL of the ADO repository showing details about the repository and its attributes
        /// </summary>
        public readonly string DetailsUrl;
        /// <summary>
        /// The internal Azure Dev Ops ID of the ADO Repository
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the ADO repository
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The HTTP URL of the ADO repository used to connect to dbt Cloud
        /// </summary>
        public readonly string RemoteUrl;
        /// <summary>
        /// The URL of the ADO repository accessible in the browser
        /// </summary>
        public readonly string WebUrl;

        [OutputConstructor]
        private GetAzureDevOpsRepositoryResult(
            string azureDevOpsProjectId,

            string defaultBranch,

            string detailsUrl,

            string id,

            string name,

            string remoteUrl,

            string webUrl)
        {
            AzureDevOpsProjectId = azureDevOpsProjectId;
            DefaultBranch = defaultBranch;
            DetailsUrl = detailsUrl;
            Id = id;
            Name = name;
            RemoteUrl = remoteUrl;
            WebUrl = webUrl;
        }
    }
}
