// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    public static class GetDatabricksCredential
    {
        public static Task<GetDatabricksCredentialResult> InvokeAsync(GetDatabricksCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabricksCredentialResult>("dbtcloud:index/getDatabricksCredential:getDatabricksCredential", args ?? new GetDatabricksCredentialArgs(), options.WithDefaults());

        public static Output<GetDatabricksCredentialResult> Invoke(GetDatabricksCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabricksCredentialResult>("dbtcloud:index/getDatabricksCredential:getDatabricksCredential", args ?? new GetDatabricksCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabricksCredentialArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Credential ID
        /// </summary>
        [Input("credentialId", required: true)]
        public int CredentialId { get; set; }

        /// <summary>
        /// Project ID
        /// </summary>
        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        public GetDatabricksCredentialArgs()
        {
        }
        public static new GetDatabricksCredentialArgs Empty => new GetDatabricksCredentialArgs();
    }

    public sealed class GetDatabricksCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Credential ID
        /// </summary>
        [Input("credentialId", required: true)]
        public Input<int> CredentialId { get; set; } = null!;

        /// <summary>
        /// Project ID
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        public GetDatabricksCredentialInvokeArgs()
        {
        }
        public static new GetDatabricksCredentialInvokeArgs Empty => new GetDatabricksCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabricksCredentialResult
    {
        /// <summary>
        /// Databricks adapter ID for the credential
        /// </summary>
        public readonly int AdapterId;
        /// <summary>
        /// The catalog where to create models
        /// </summary>
        public readonly string Catalog;
        /// <summary>
        /// Credential ID
        /// </summary>
        public readonly int CredentialId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Number of threads to use
        /// </summary>
        public readonly int NumThreads;
        /// <summary>
        /// Project ID
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// The schema where to create models
        /// </summary>
        public readonly string Schema;
        /// <summary>
        /// Target name
        /// </summary>
        public readonly string TargetName;

        [OutputConstructor]
        private GetDatabricksCredentialResult(
            int adapterId,

            string catalog,

            int credentialId,

            string id,

            int numThreads,

            int projectId,

            string schema,

            string targetName)
        {
            AdapterId = adapterId;
            Catalog = catalog;
            CredentialId = credentialId;
            Id = id;
            NumThreads = numThreads;
            ProjectId = projectId;
            Schema = schema;
            TargetName = targetName;
        }
    }
}
