// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    public static class GetPostgresCredential
    {
        public static Task<GetPostgresCredentialResult> InvokeAsync(GetPostgresCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPostgresCredentialResult>("dbtcloud:index/getPostgresCredential:getPostgresCredential", args ?? new GetPostgresCredentialArgs(), options.WithDefaults());

        public static Output<GetPostgresCredentialResult> Invoke(GetPostgresCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPostgresCredentialResult>("dbtcloud:index/getPostgresCredential:getPostgresCredential", args ?? new GetPostgresCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPostgresCredentialArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Credential ID
        /// </summary>
        [Input("credentialId", required: true)]
        public int CredentialId { get; set; }

        /// <summary>
        /// Project ID
        /// </summary>
        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        public GetPostgresCredentialArgs()
        {
        }
        public static new GetPostgresCredentialArgs Empty => new GetPostgresCredentialArgs();
    }

    public sealed class GetPostgresCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Credential ID
        /// </summary>
        [Input("credentialId", required: true)]
        public Input<int> CredentialId { get; set; } = null!;

        /// <summary>
        /// Project ID
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        public GetPostgresCredentialInvokeArgs()
        {
        }
        public static new GetPostgresCredentialInvokeArgs Empty => new GetPostgresCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class GetPostgresCredentialResult
    {
        /// <summary>
        /// Credential ID
        /// </summary>
        public readonly int CredentialId;
        /// <summary>
        /// Default schema name
        /// </summary>
        public readonly string DefaultSchema;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the Postgres credential is active
        /// </summary>
        public readonly bool IsActive;
        /// <summary>
        /// Number of threads to use
        /// </summary>
        public readonly int NumThreads;
        /// <summary>
        /// Project ID
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// Username for Postgres
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetPostgresCredentialResult(
            int credentialId,

            string defaultSchema,

            string id,

            bool isActive,

            int numThreads,

            int projectId,

            string username)
        {
            CredentialId = credentialId;
            DefaultSchema = defaultSchema;
            Id = id;
            IsActive = isActive;
            NumThreads = numThreads;
            ProjectId = projectId;
            Username = username;
        }
    }
}
