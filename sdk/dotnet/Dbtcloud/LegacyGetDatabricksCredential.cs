// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ASchot.Pulumi.Dbtcloud
{
    public static class LegacyGetDatabricksCredential
    {
        public static Task<LegacyGetDatabricksCredentialResult> InvokeAsync(LegacyGetDatabricksCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<LegacyGetDatabricksCredentialResult>("dbtcloud:index/legacyGetDatabricksCredential:LegacyGetDatabricksCredential", args ?? new LegacyGetDatabricksCredentialArgs(), options.WithDefaults());

        public static Output<LegacyGetDatabricksCredentialResult> Invoke(LegacyGetDatabricksCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<LegacyGetDatabricksCredentialResult>("dbtcloud:index/legacyGetDatabricksCredential:LegacyGetDatabricksCredential", args ?? new LegacyGetDatabricksCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class LegacyGetDatabricksCredentialArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentialId", required: true)]
        public int CredentialId { get; set; }

        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        public LegacyGetDatabricksCredentialArgs()
        {
        }
        public static new LegacyGetDatabricksCredentialArgs Empty => new LegacyGetDatabricksCredentialArgs();
    }

    public sealed class LegacyGetDatabricksCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentialId", required: true)]
        public Input<int> CredentialId { get; set; } = null!;

        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        public LegacyGetDatabricksCredentialInvokeArgs()
        {
        }
        public static new LegacyGetDatabricksCredentialInvokeArgs Empty => new LegacyGetDatabricksCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class LegacyGetDatabricksCredentialResult
    {
        public readonly int AdapterId;
        public readonly string Catalog;
        public readonly int CredentialId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int NumThreads;
        public readonly int ProjectId;
        public readonly string Schema;
        public readonly string TargetName;

        [OutputConstructor]
        private LegacyGetDatabricksCredentialResult(
            int adapterId,

            string catalog,

            int credentialId,

            string id,

            int numThreads,

            int projectId,

            string schema,

            string targetName)
        {
            AdapterId = adapterId;
            Catalog = catalog;
            CredentialId = credentialId;
            Id = id;
            NumThreads = numThreads;
            ProjectId = projectId;
            Schema = schema;
            TargetName = targetName;
        }
    }
}
